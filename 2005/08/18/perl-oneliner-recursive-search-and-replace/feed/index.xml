<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	
	>
<channel>
	<title>
	Comments on: Perl Oneliner: Recursive Search and Replace	</title>
	<atom:link href="/2005/08/18/perl-oneliner-recursive-search-and-replace/feed/" rel="self" type="application/rss+xml" />
	<link>/2005/08/18/perl-oneliner-recursive-search-and-replace/</link>
	<description></description>
	<lastBuildDate>Fri, 27 Jan 2017 23:53:06 +0000</lastBuildDate>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.7.2</generator>
	<item>
		<title>
		By: DanH		</title>
		<link>/2005/08/18/perl-oneliner-recursive-search-and-replace/#comment-34272</link>

		<dc:creator><![CDATA[DanH]]></dc:creator>
		<pubDate>Fri, 27 Jan 2017 23:53:06 +0000</pubDate>
		<guid isPermaLink="false">http://joseph.randomnetworks.com/?p=458#comment-34272</guid>

					<description><![CDATA[Building off of Nic&#039;s and others&#039; posts, this works for file names including spaces and doesn&#039;t update files that don&#039;t need updating:
find . -type f -name &#039;*.html&#039; -print0 &#124; xargs -0 grep -lZ &#039;oldstring&#039; &#124; xargs -0 perl -pi -e &#039;s/oldstring/newstring/g&#039;]]></description>
			<content:encoded><![CDATA[<p>Building off of Nic&#8217;s and others&#8217; posts, this works for file names including spaces and doesn&#8217;t update files that don&#8217;t need updating:<br />
find . -type f -name &#8216;*.html&#8217; -print0 | xargs -0 grep -lZ &#8216;oldstring&#8217; | xargs -0 perl -pi -e &#8216;s/oldstring/newstring/g&#8217;</p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		By: murali		</title>
		<link>/2005/08/18/perl-oneliner-recursive-search-and-replace/#comment-913</link>

		<dc:creator><![CDATA[murali]]></dc:creator>
		<pubDate>Mon, 25 Mar 2013 06:38:46 +0000</pubDate>
		<guid isPermaLink="false">http://joseph.randomnetworks.com/?p=458#comment-913</guid>

					<description><![CDATA[echo &quot;entre MDn&quot;
read mdn
echo &quot;mdn is $mdn&quot;
perl -p -ne  &#039;s/MDN/$mdn/g&#039; /cmpnt/AWCC1.0/AWCCSST3/RB/install/fid/murali/pos/mms/*
echo &quot;changed&quot;
i have ran the folloeing script but ithe value did not get replaced it replaced with a space please suggest]]></description>
			<content:encoded><![CDATA[<p>echo &#8220;entre MDn&#8221;<br />
read mdn<br />
echo &#8220;mdn is $mdn&#8221;<br />
perl -p -ne  &#8216;s/MDN/$mdn/g&#8217; /cmpnt/AWCC1.0/AWCCSST3/RB/install/fid/murali/pos/mms/*<br />
echo &#8220;changed&#8221;<br />
i have ran the folloeing script but ithe value did not get replaced it replaced with a space please suggest</p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		By: Carvel		</title>
		<link>/2005/08/18/perl-oneliner-recursive-search-and-replace/#comment-912</link>

		<dc:creator><![CDATA[Carvel]]></dc:creator>
		<pubDate>Thu, 14 Feb 2013 23:57:49 +0000</pubDate>
		<guid isPermaLink="false">http://joseph.randomnetworks.com/?p=458#comment-912</guid>

					<description><![CDATA[find . -name someFile.txt -exec perl -p -i -e &#039;s/oldString/newString/g&#039;  {} ;

The above command will search recursively for a file named `somFile.txt` and it will perform the string replace.]]></description>
			<content:encoded><![CDATA[<p>find . -name someFile.txt -exec perl -p -i -e &#8216;s/oldString/newString/g&#8217;  {} ;</p>
<p>The above command will search recursively for a file named `somFile.txt` and it will perform the string replace.</p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		By: cirosantilli		</title>
		<link>/2005/08/18/perl-oneliner-recursive-search-and-replace/#comment-911</link>

		<dc:creator><![CDATA[cirosantilli]]></dc:creator>
		<pubDate>Thu, 18 Oct 2012 23:39:58 +0000</pubDate>
		<guid isPermaLink="false">http://joseph.randomnetworks.com/?p=458#comment-911</guid>

					<description><![CDATA[ack -f &#124; xargs perl -lane &#039;print if s/z/Z/g&#039;
#prints modified lines only, no changes made

ack -f &#124; xargs perl -pi -e &#039;s/z/Z/g&#039;
#changes made, prints nothing]]></description>
			<content:encoded><![CDATA[<p>ack -f | xargs perl -lane &#8216;print if s/z/Z/g&#8217;<br />
#prints modified lines only, no changes made</p>
<p>ack -f | xargs perl -pi -e &#8216;s/z/Z/g&#8217;<br />
#changes made, prints nothing</p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		By: vesa		</title>
		<link>/2005/08/18/perl-oneliner-recursive-search-and-replace/#comment-910</link>

		<dc:creator><![CDATA[vesa]]></dc:creator>
		<pubDate>Mon, 08 Oct 2012 16:34:20 +0000</pubDate>
		<guid isPermaLink="false">http://joseph.randomnetworks.com/?p=458#comment-910</guid>

					<description><![CDATA[GaryB:s way is the old school way and in my opinion the best way to do it. Just a minor improvement to include just the files named *.html:

find ./ -type f -name &#039;*.html&#039; -exec perl -i -pe &#039;s/oldstring/newstring/g&#039; {} ;]]></description>
			<content:encoded><![CDATA[<p>GaryB:s way is the old school way and in my opinion the best way to do it. Just a minor improvement to include just the files named *.html:</p>
<p>find ./ -type f -name &#8216;*.html&#8217; -exec perl -i -pe &#8216;s/oldstring/newstring/g&#8217; {} ;</p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		By: Peter Fraterdeus		</title>
		<link>/2005/08/18/perl-oneliner-recursive-search-and-replace/#comment-909</link>

		<dc:creator><![CDATA[Peter Fraterdeus]]></dc:creator>
		<pubDate>Thu, 19 Jul 2012 04:19:39 +0000</pubDate>
		<guid isPermaLink="false">http://joseph.randomnetworks.com/?p=458#comment-909</guid>

					<description><![CDATA[I like it with some env variables:

This is how I replaced the problematic  with the equivalent suitable for parsing in a php environment. (Since the &#060;? short-code invokes php on many server configs)

# assign shell environment variables
OLDSTRING=&#039;r?&#039;
NEWSTRING=&#039;php echo(&quot;&quot;); ?&#062;&#039;
# quoting the backslashes important here!

# invoke perl regex on the results of the find command interpreted in backquotes
perl -p -i -e &quot;s/$OLDSTRING/$NEWSTRING/&quot; `find ./ -type f -name &quot;*.html&quot;`

Which works great although I&#039;m perplexed with the above by the fact that if I included &quot;&#060;?&#034; before &#034;php echo&#034; in NEWSTRING, the result had &#034;&#060;?&#060;?php ...&#034; which, of course causes problems. 

PF]]></description>
			<content:encoded><![CDATA[<p>I like it with some env variables:</p>
<p>This is how I replaced the problematic  with the equivalent suitable for parsing in a php environment. (Since the &lt;? short-code invokes php on many server configs)</p>
<p># assign shell environment variables<br />
OLDSTRING=&#039;r?&#8217;<br />
NEWSTRING=&#8217;php echo(&#8220;&#8221;); ?&gt;&#8217;<br />
# quoting the backslashes important here!</p>
<p># invoke perl regex on the results of the find command interpreted in backquotes<br />
perl -p -i -e &#8220;s/$OLDSTRING/$NEWSTRING/&#8221; `find ./ -type f -name &#8220;*.html&#8221;`</p>
<p>Which works great although I&#8217;m perplexed with the above by the fact that if I included &#8220;&lt;?&quot; before &quot;php echo&quot; in NEWSTRING, the result had &quot;&lt;?&lt;?php &#8230;&quot; which, of course causes problems. </p>
<p>PF</p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		By: marks		</title>
		<link>/2005/08/18/perl-oneliner-recursive-search-and-replace/#comment-908</link>

		<dc:creator><![CDATA[marks]]></dc:creator>
		<pubDate>Wed, 27 Jun 2012 18:45:14 +0000</pubDate>
		<guid isPermaLink="false">http://joseph.randomnetworks.com/?p=458#comment-908</guid>

					<description><![CDATA[echoing what everyone said above, but adding the -f switch for find will smooth things out if you happened to have a dir name which ended in dot html:
perl -p -i -e &#039;s/oldstring/newstring/g&#039; `find ./ -type f -name &quot;*.html&quot; `]]></description>
			<content:encoded><![CDATA[<p>echoing what everyone said above, but adding the -f switch for find will smooth things out if you happened to have a dir name which ended in dot html:<br />
perl -p -i -e &#8216;s/oldstring/newstring/g&#8217; `find ./ -type f -name &#8220;*.html&#8221; `</p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		By: Bobo		</title>
		<link>/2005/08/18/perl-oneliner-recursive-search-and-replace/#comment-907</link>

		<dc:creator><![CDATA[Bobo]]></dc:creator>
		<pubDate>Wed, 14 Sep 2011 17:58:25 +0000</pubDate>
		<guid isPermaLink="false">http://joseph.randomnetworks.com/?p=458#comment-907</guid>

					<description><![CDATA[sed, as shipped with many OS installs, doesn&#039;t work with escaped characters, so it can&#039;t be used for many cases.]]></description>
			<content:encoded><![CDATA[<p>sed, as shipped with many OS installs, doesn&#8217;t work with escaped characters, so it can&#8217;t be used for many cases.</p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		By: Andrej		</title>
		<link>/2005/08/18/perl-oneliner-recursive-search-and-replace/#comment-906</link>

		<dc:creator><![CDATA[Andrej]]></dc:creator>
		<pubDate>Wed, 24 Aug 2011 00:46:38 +0000</pubDate>
		<guid isPermaLink="false">http://joseph.randomnetworks.com/?p=458#comment-906</guid>

					<description><![CDATA[I love perl, but for these use-cases sed would have been more than sufficient?

sed -i &#039;s/oldstring/newstring/g&#039; *

Same w/ the other examples ... 



Cheers,
Andrej]]></description>
			<content:encoded><![CDATA[<p>I love perl, but for these use-cases sed would have been more than sufficient?</p>
<p>sed -i &#8216;s/oldstring/newstring/g&#8217; *</p>
<p>Same w/ the other examples &#8230; </p>
<p>Cheers,<br />
Andrej</p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		By: JP		</title>
		<link>/2005/08/18/perl-oneliner-recursive-search-and-replace/#comment-905</link>

		<dc:creator><![CDATA[JP]]></dc:creator>
		<pubDate>Mon, 03 Jan 2011 11:24:39 +0000</pubDate>
		<guid isPermaLink="false">http://joseph.randomnetworks.com/?p=458#comment-905</guid>

					<description><![CDATA[The second oneliner worked like a charm, just what I was looking for. Thanks!!]]></description>
			<content:encoded><![CDATA[<p>The second oneliner worked like a charm, just what I was looking for. Thanks!!</p>
]]></content:encoded>
		
			</item>
	</channel>
</rss>
