<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	
	>
<channel>
	<title>
	Comments on: Benchmarks And Dates	</title>
	<atom:link href="/2005/01/03/benchmarks-and-dates/feed/" rel="self" type="application/rss+xml" />
	<link>/2005/01/03/benchmarks-and-dates/</link>
	<description></description>
	<lastBuildDate>Thu, 28 Apr 2005 02:16:26 +0000</lastBuildDate>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.7.2</generator>
	<item>
		<title>
		By: Matt Rains		</title>
		<link>/2005/01/03/benchmarks-and-dates/#comment-736</link>

		<dc:creator><![CDATA[Matt Rains]]></dc:creator>
		<pubDate>Thu, 28 Apr 2005 02:16:26 +0000</pubDate>
		<guid isPermaLink="false">http://joseph.randomnetworks.com/archives/2005/01/03/benchmarks-and-dates/#comment-736</guid>

					<description><![CDATA[You may be missing the point a little bit of SQLite.  The reasons the benchmarks dont matter, (not to mention date...).

SQLite is not client/server based, therfore the entire inner workings of the product is different compared to the others.  If you want to get down to the nitty gritty to compare them at all is pointless.  For Example : Where&#039;s the benchmark for metwork latency?  Since SQLite has no network latency you are going to see a significant speed increase.  Also the fact that SQLite runs in a single process and the others need a minimum of 2 processes running there is going to be another hit.

The benchmark is there for people who dont know much about databases.  Like a technical manager or something like that ;).  So when hes surfing the net looking to save money, and says &quot;Why dont we use that?!?!&quot;  blah blah blah...  We&#039;re still on MySQL.

I guess what I&#039;m trying to say in a nutshell, is that comparing SQLite to MySQL is like comparing and XML database API to MySQL.  SQLite is getting better but is still not a databse yet.
ie..
No column type contraints.
Text can be put in an int column.
They are just now getting around to adding ALTER TABLE statements that allow you to adjust columns.

Don&#039;t get me wrong I think its a slick package, and with time may mature very well.

I&#039;m just rambling...  but that benchmark in the first place is a joke.]]></description>
			<content:encoded><![CDATA[<p>You may be missing the point a little bit of SQLite.  The reasons the benchmarks dont matter, (not to mention date&#8230;).</p>
<p>SQLite is not client/server based, therfore the entire inner workings of the product is different compared to the others.  If you want to get down to the nitty gritty to compare them at all is pointless.  For Example : Where&#8217;s the benchmark for metwork latency?  Since SQLite has no network latency you are going to see a significant speed increase.  Also the fact that SQLite runs in a single process and the others need a minimum of 2 processes running there is going to be another hit.</p>
<p>The benchmark is there for people who dont know much about databases.  Like a technical manager or something like that ;).  So when hes surfing the net looking to save money, and says &#8220;Why dont we use that?!?!&#8221;  blah blah blah&#8230;  We&#8217;re still on MySQL.</p>
<p>I guess what I&#8217;m trying to say in a nutshell, is that comparing SQLite to MySQL is like comparing and XML database API to MySQL.  SQLite is getting better but is still not a databse yet.<br />
ie..<br />
No column type contraints.<br />
Text can be put in an int column.<br />
They are just now getting around to adding ALTER TABLE statements that allow you to adjust columns.</p>
<p>Don&#8217;t get me wrong I think its a slick package, and with time may mature very well.</p>
<p>I&#8217;m just rambling&#8230;  but that benchmark in the first place is a joke.</p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		By: Robert Treat		</title>
		<link>/2005/01/03/benchmarks-and-dates/#comment-735</link>

		<dc:creator><![CDATA[Robert Treat]]></dc:creator>
		<pubDate>Tue, 04 Jan 2005 05:22:42 +0000</pubDate>
		<guid isPermaLink="false">http://joseph.randomnetworks.com/archives/2005/01/03/benchmarks-and-dates/#comment-735</guid>

					<description><![CDATA[IIRC the problem with my$ql stems from the change in the client libraries from lgpl to gpl, meaning that (as my$ql once put it) any program connecting to mysql using the libraries has to either be gpl or get a commercial license.  Yeah, that tends to scare a lot of people away.

As for PostgreSQL... &quot; Postgres hasn’t gone far – it’s only up to 7.4.6 as I write this.&quot;.... egads!!  That couldn&#039;t be farther from the truth.     With PostgreSQL, each secondary version number bump release is essentially an order of magnitude level change, so going from 7.1.x to 7.4.x is like from linux 2.0 -&#062; 2.6, quite a change indeed.  I wont claim that we beat the pants off sqlite in the sqlite benchmarks by any means, but we certainly beat the pants off the 7.1 results seen in the test (someone actually attempted this a while back, with some extensive googling you might be able to find the information).]]></description>
			<content:encoded><![CDATA[<p>IIRC the problem with my$ql stems from the change in the client libraries from lgpl to gpl, meaning that (as my$ql once put it) any program connecting to mysql using the libraries has to either be gpl or get a commercial license.  Yeah, that tends to scare a lot of people away.</p>
<p>As for PostgreSQL&#8230; &#8221; Postgres hasn’t gone far – it’s only up to 7.4.6 as I write this.&#8221;&#8230;. egads!!  That couldn&#8217;t be farther from the truth.     With PostgreSQL, each secondary version number bump release is essentially an order of magnitude level change, so going from 7.1.x to 7.4.x is like from linux 2.0 -&gt; 2.6, quite a change indeed.  I wont claim that we beat the pants off sqlite in the sqlite benchmarks by any means, but we certainly beat the pants off the 7.1 results seen in the test (someone actually attempted this a while back, with some extensive googling you might be able to find the information).</p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		By: Deane		</title>
		<link>/2005/01/03/benchmarks-and-dates/#comment-734</link>

		<dc:creator><![CDATA[Deane]]></dc:creator>
		<pubDate>Tue, 04 Jan 2005 00:31:39 +0000</pubDate>
		<guid isPermaLink="false">http://joseph.randomnetworks.com/archives/2005/01/03/benchmarks-and-dates/#comment-734</guid>

					<description><![CDATA[Huh.  I think it&#039;s in the client libraries where they were LGPLed?  I swear I heard this somewhere.

I just went over to Plesk and logged into the demo of &quot;Plesk 7.5 Reloaded&quot; -- their latest and greatest.  Sure enough, MySQL 3.23.56.

I&#039;m tellin&#039; you, there&#039;s some reason a lot of companies are staying with 3.23.  I&#039;d be interested in remembering what it is...]]></description>
			<content:encoded><![CDATA[<p>Huh.  I think it&#8217;s in the client libraries where they were LGPLed?  I swear I heard this somewhere.</p>
<p>I just went over to Plesk and logged into the demo of &#8220;Plesk 7.5 Reloaded&#8221; &#8212; their latest and greatest.  Sure enough, MySQL 3.23.56.</p>
<p>I&#8217;m tellin&#8217; you, there&#8217;s some reason a lot of companies are staying with 3.23.  I&#8217;d be interested in remembering what it is&#8230;</p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		By: Joseph Scott		</title>
		<link>/2005/01/03/benchmarks-and-dates/#comment-733</link>

		<dc:creator><![CDATA[Joseph Scott]]></dc:creator>
		<pubDate>Mon, 03 Jan 2005 20:57:48 +0000</pubDate>
		<guid isPermaLink="false">http://joseph.randomnetworks.com/archives/2005/01/03/benchmarks-and-dates/#comment-733</guid>

					<description><![CDATA[Licensing is certainly a valid reason for picking one version over another (unfortunately).  I suppose this is one of the reasons I generally prefer the BSD license over GPL/LGPL.

I downloaded the MySQL 3.23.58 (latest 3.23 version from MySQL.com) to see what license it had.  The README file starts with

&quot;This is a release of MySQL, a GPL (free) SQL database server...&quot;

The file COPYING is a copy of the GPL.  Still wanting to make sure I looked at the docs that come with 3.23.58.  Section 1.4.3 MySQL Licenses, says:

&quot;The MySQL software is released under the GNU General Public License (GPL), which is probably the best known Open Source license.&quot;

Based on this info I&#039;d say that 3.23.x versions of MySQL are licensed under the GPL.  MySQL seems to interpret the GPL in ways that not everyone agrees with, so there may be still be issues, but it doesn&#039;t appear to have anything to do with GPL vs. LGPL.

I also downloaded MySQL 4.0.22 (latest 4.0.x version) from MySQL.com.  I looked in all of the same places I mentioned above for 3.23.58.  The text in each is virtually identical, all indicating the GPL as the license being used.

Given that there appears to be no difference in licensing between 3.23.x and 4.0.x of MySQL I see no reason anyone would stick with 3.23.x for new installs.  MySQL may interpret its licensing in strange ways, but it is still claiming GPL in both versions.]]></description>
			<content:encoded><![CDATA[<p>Licensing is certainly a valid reason for picking one version over another (unfortunately).  I suppose this is one of the reasons I generally prefer the BSD license over GPL/LGPL.</p>
<p>I downloaded the MySQL 3.23.58 (latest 3.23 version from MySQL.com) to see what license it had.  The README file starts with</p>
<p>&#8220;This is a release of MySQL, a GPL (free) SQL database server&#8230;&#8221;</p>
<p>The file COPYING is a copy of the GPL.  Still wanting to make sure I looked at the docs that come with 3.23.58.  Section 1.4.3 MySQL Licenses, says:</p>
<p>&#8220;The MySQL software is released under the GNU General Public License (GPL), which is probably the best known Open Source license.&#8221;</p>
<p>Based on this info I&#8217;d say that 3.23.x versions of MySQL are licensed under the GPL.  MySQL seems to interpret the GPL in ways that not everyone agrees with, so there may be still be issues, but it doesn&#8217;t appear to have anything to do with GPL vs. LGPL.</p>
<p>I also downloaded MySQL 4.0.22 (latest 4.0.x version) from MySQL.com.  I looked in all of the same places I mentioned above for 3.23.58.  The text in each is virtually identical, all indicating the GPL as the license being used.</p>
<p>Given that there appears to be no difference in licensing between 3.23.x and 4.0.x of MySQL I see no reason anyone would stick with 3.23.x for new installs.  MySQL may interpret its licensing in strange ways, but it is still claiming GPL in both versions.</p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		By: Deane		</title>
		<link>/2005/01/03/benchmarks-and-dates/#comment-732</link>

		<dc:creator><![CDATA[Deane]]></dc:creator>
		<pubDate>Mon, 03 Jan 2005 20:32:39 +0000</pubDate>
		<guid isPermaLink="false">http://joseph.randomnetworks.com/archives/2005/01/03/benchmarks-and-dates/#comment-732</guid>

					<description><![CDATA[Actually, MySQL 3.23 will stay in heavy use due to licensing.

My understanding of it (this may be wrong...) is that the 3.23 libraries were LGPL, meaning you could still use them in something and not GPL the whole thing.  However, the 4.x libraries are full GPL, meaning you may have to GPL your whole app.

3.23 will gets deployed a lot, believe me.  All your other concerns are perfectly valid, however.]]></description>
			<content:encoded><![CDATA[<p>Actually, MySQL 3.23 will stay in heavy use due to licensing.</p>
<p>My understanding of it (this may be wrong&#8230;) is that the 3.23 libraries were LGPL, meaning you could still use them in something and not GPL the whole thing.  However, the 4.x libraries are full GPL, meaning you may have to GPL your whole app.</p>
<p>3.23 will gets deployed a lot, believe me.  All your other concerns are perfectly valid, however.</p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		By: Joseph Scott		</title>
		<link>/2005/01/03/benchmarks-and-dates/#comment-731</link>

		<dc:creator><![CDATA[Joseph Scott]]></dc:creator>
		<pubDate>Mon, 03 Jan 2005 20:09:32 +0000</pubDate>
		<guid isPermaLink="false">http://joseph.randomnetworks.com/archives/2005/01/03/benchmarks-and-dates/#comment-731</guid>

					<description><![CDATA[Older versions of MySQL are still in heavy use, but benchmarks are generally for those looking to deploy something new (either for replacement or brand new).  If you were doing this today I&#039;d be hard pressed to believe that anyone would avoid MySQL 4.x in favor of MySQL 3.x.

To compare how much something has changed based on the numerical difference in version numbers is extremely limited, at best.  To be honest I&#039;d consider that a lame excuse not to look at new versions of software, PostgreSQL or other wise.  Do you consider than Linux hasn&#039;t made many changes because it hasn&#039;t hit 3.0 yet over 2.4 or 2.6?

The whole point about dates and benchmarks emphasize that the numbers are relative to a certain point in time.  Without giving a date you don&#039;t know when that point in time is.  Sure SQLite has the best numbers in this benchmark, but that wasn&#039;t my point.  My point was that they didn&#039;t tell you that they were comparing software versions of MySQL and PostgreSQL that were a year and half older and that the benchmark is at least two years old.

Don&#039;t you think that in two years it is possible that these numbers may have changed some since then?  I&#039;m not claiming that PostgreSQL or MySQL will now beat the pants off of SQLite, simply that the numbers are likely to change (for good or bad) over time and in this industry two years is a very long time.]]></description>
			<content:encoded><![CDATA[<p>Older versions of MySQL are still in heavy use, but benchmarks are generally for those looking to deploy something new (either for replacement or brand new).  If you were doing this today I&#8217;d be hard pressed to believe that anyone would avoid MySQL 4.x in favor of MySQL 3.x.</p>
<p>To compare how much something has changed based on the numerical difference in version numbers is extremely limited, at best.  To be honest I&#8217;d consider that a lame excuse not to look at new versions of software, PostgreSQL or other wise.  Do you consider than Linux hasn&#8217;t made many changes because it hasn&#8217;t hit 3.0 yet over 2.4 or 2.6?</p>
<p>The whole point about dates and benchmarks emphasize that the numbers are relative to a certain point in time.  Without giving a date you don&#8217;t know when that point in time is.  Sure SQLite has the best numbers in this benchmark, but that wasn&#8217;t my point.  My point was that they didn&#8217;t tell you that they were comparing software versions of MySQL and PostgreSQL that were a year and half older and that the benchmark is at least two years old.</p>
<p>Don&#8217;t you think that in two years it is possible that these numbers may have changed some since then?  I&#8217;m not claiming that PostgreSQL or MySQL will now beat the pants off of SQLite, simply that the numbers are likely to change (for good or bad) over time and in this industry two years is a very long time.</p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		By: Deane		</title>
		<link>/2005/01/03/benchmarks-and-dates/#comment-730</link>

		<dc:creator><![CDATA[Deane]]></dc:creator>
		<pubDate>Mon, 03 Jan 2005 19:56:27 +0000</pubDate>
		<guid isPermaLink="false">http://joseph.randomnetworks.com/archives/2005/01/03/benchmarks-and-dates/#comment-730</guid>

					<description><![CDATA[You&#039;re very right.  I looked for a date on that comparison, but couldn&#039;t find one.  The reason I still went ahead with the post is because:

(1) The MySQL version is still in heavy, heavy use.  3.23 was the last version before 4.x and most hosts still use it, I hear due to some licensing changes between 3.x and 4.x.

(2) Postgres hasn&#039;t gone far -- it&#039;s only up to 7.4.6 as I write this.  (8.0 is at RC1)

(3) While SQLite has pushed into 3.x, its numbers are so drastically better than MySQL, that I was more interested in the difference between them than actual, measurable figures.

It&#039;s a trade off.  I was more interested in showing how fast open-source, *nix-ish databases were in general, as opposed to the proprietary alternatives.  I should have emphasized that more.

Deane]]></description>
			<content:encoded><![CDATA[<p>You&#8217;re very right.  I looked for a date on that comparison, but couldn&#8217;t find one.  The reason I still went ahead with the post is because:</p>
<p>(1) The MySQL version is still in heavy, heavy use.  3.23 was the last version before 4.x and most hosts still use it, I hear due to some licensing changes between 3.x and 4.x.</p>
<p>(2) Postgres hasn&#8217;t gone far &#8212; it&#8217;s only up to 7.4.6 as I write this.  (8.0 is at RC1)</p>
<p>(3) While SQLite has pushed into 3.x, its numbers are so drastically better than MySQL, that I was more interested in the difference between them than actual, measurable figures.</p>
<p>It&#8217;s a trade off.  I was more interested in showing how fast open-source, *nix-ish databases were in general, as opposed to the proprietary alternatives.  I should have emphasized that more.</p>
<p>Deane</p>
]]></content:encoded>
		
			</item>
	</channel>
</rss>
