<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>drew-mclellan &#8211; Joseph Scott</title>
	<atom:link href="/tag/drew-mclellan/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description></description>
	<lastBuildDate>Wed, 29 Jan 2014 16:48:16 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.7.2</generator>
	<atom:link rel='hub' href='/?pushpress=hub'/>
	<item>
		<title>Progressive Enhancement, Where Art Thou?</title>
		<link>/2014/01/29/progressive-enhancement-where-art-thou/</link>
					<comments>/2014/01/29/progressive-enhancement-where-art-thou/#respond</comments>
		
		<dc:creator><![CDATA[josephscott]]></dc:creator>
		<pubDate>Wed, 29 Jan 2014 16:48:16 +0000</pubDate>
				<category><![CDATA[Posts]]></category>
		<category><![CDATA[drew-mclellan]]></category>
		<category><![CDATA[javascript]]></category>
		<category><![CDATA[progressive-enhancement]]></category>
		<category><![CDATA[simon-st-laurent]]></category>
		<guid isPermaLink="false">https://josephscott.org/?p=9854</guid>

					<description><![CDATA[Drew McLellan wonders Why is Progressive Enhancement so unpopular?: Does that mean we shouldn’t use JavaScript? Of course not. Scripting in the browser is an important part of the experience of using the web in 2014. It’s my opinion that you shouldn’t depend on JavaScript running for your site to work. Build with HTML, add [&#8230;]]]></description>
										<content:encoded><![CDATA[<p>Drew McLellan wonders <a href='http://allinthehead.com/retro/367/why-is-progressive-enhancement-so-unpopular' title='Too many people are too quick to go all JavaScript all the time.'>Why is Progressive Enhancement so unpopular?</a>:</p>
<blockquote><p>
Does that mean we shouldn’t use JavaScript? Of course not. Scripting in the browser is an important part of the experience of using the web in 2014. It’s my opinion that you shouldn’t depend on JavaScript running for your site to work. Build with HTML, add styling with CSS, add behaviour with JavaScript. If the JavaScript fails, the HTML should still work.
</p></blockquote>
<p>Simon St. Laurent touched on this as well in <a href="http://programming.oreilly.com/2014/01/web-application-development-is-different-and-better.html" title="Constraints can be a good thing.">Web Application Development is Different (and Better)</a>:</p>
<blockquote><p>
Let’s extend the Web and help it do more – but let’s do that by valuing the many strengths it already brings.
</p></blockquote>
<p>Intentional or not the last few years have brought us a strong push to ignore the idea of progressive enhancement.  In many cases that has been to our detriment.</p>
]]></content:encoded>
					
					<wfw:commentRss>/2014/01/29/progressive-enhancement-where-art-thou/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>On-page Editing, Pro or Con?</title>
		<link>/2011/03/30/on-page-editing-pro-or-con/</link>
					<comments>/2011/03/30/on-page-editing-pro-or-con/#comments</comments>
		
		<dc:creator><![CDATA[josephscott]]></dc:creator>
		<pubDate>Wed, 30 Mar 2011 19:03:57 +0000</pubDate>
				<category><![CDATA[Posts]]></category>
		<category><![CDATA[cms]]></category>
		<category><![CDATA[drew-mclellan]]></category>
		<category><![CDATA[on-page-editing]]></category>
		<guid isPermaLink="false">http://josephscott.org/?p=3921</guid>

					<description><![CDATA[The control panel editing experience creates an abstraction from the page quite deliberately. That abstraction is needed in order to be able to make use of the technology in the way that best serves the client. I don’t believe the direct-manipulation metaphor (i.e. on-page editing) can be maintained whilst still offering the labour-saving benefits of [&#8230;]]]></description>
										<content:encoded><![CDATA[<blockquote><p>
The control panel editing experience creates an abstraction from the page quite deliberately. That abstraction is needed in order to be able to make use of the technology in the way that best serves the client. I don’t believe the direct-manipulation metaphor (i.e. on-page editing) can be maintained whilst still offering the labour-saving benefits of managed content.
</p></blockquote>
<p><a href='http://allinthehead.com/retro/357/the-lure-of-on-page-editing'>The Lure of On-page Editing — Drew McLellan</a>.</p>
<p>At a CMS level on-page editing is going to be problematic at best.  You never know what sort of adjustments a theme or user has made to the user facing side.  That level of uncertainty increases the developer work load quite a bit.  Then there are the less tangible portions that need editing, which makes the experience even more confusing.</p>
<p>At a higher level though, there are situations where on-page editing is a big win.  The <a href="http://wordpress.org/extend/themes/p2">P2 WordPress theme</a> for instance supports on-page editing of posts and comments.  Because the theme layer is further up the stack the effort to maintain consistency and good user experience is easier to manage.</p>
<p>If I were to attempt to generalize this into a guideline: on-page editing should be placed on a layer that is as close the user as possible.</p>
]]></content:encoded>
					
					<wfw:commentRss>/2011/03/30/on-page-editing-pro-or-con/feed/</wfw:commentRss>
			<slash:comments>3</slash:comments>
		
		
			</item>
	</channel>
</rss>
