<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>eric-chiang &#8211; Joseph Scott</title>
	<atom:link href="/tag/eric-chiang/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description></description>
	<lastBuildDate>Mon, 29 Sep 2014 14:33:10 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.7.2</generator>
	<atom:link rel='hub' href='/?pushpress=hub'/>
	<item>
		<title>pup, Command Line HTML Processor</title>
		<link>/2014/09/29/pup-command-line-html-processor/</link>
					<comments>/2014/09/29/pup-command-line-html-processor/#comments</comments>
		
		<dc:creator><![CDATA[josephscott]]></dc:creator>
		<pubDate>Mon, 29 Sep 2014 14:33:10 +0000</pubDate>
				<category><![CDATA[Posts]]></category>
		<category><![CDATA[eric-chiang]]></category>
		<category><![CDATA[go]]></category>
		<category><![CDATA[html]]></category>
		<category><![CDATA[pup]]></category>
		<guid isPermaLink="false">https://josephscott.org/?p=11027</guid>

					<description><![CDATA[Last year I mentioned a nifty little command line tool called jq. It had a very specific purpose: make it easy to process JSON. That same line of thinking inspired pup, from Eric Chiang: pup is a command line tool for processing HTML. It reads from stdin, prints to stdout, and allows the user to [&#8230;]]]></description>
										<content:encoded><![CDATA[<p>Last year I mentioned a nifty little command line tool called <a href="https://josephscott.org/archives/2013/03/jq-command-line-json-processor/">jq</a>.  It had a very specific purpose: make it easy to process JSON.  That same line of thinking inspired <a href="https://github.com/EricChiang/pup">pup</a>, from <a href="https://twitter.com/erchiang">Eric Chiang</a>:</p>
<blockquote><p>
pup is a command line tool for processing HTML. It reads from stdin, prints to stdout, and allows the user to filter parts of the page using CSS selectors.
</p></blockquote>
<p>Here is a little taste of how this works:</p>
<p>[sourcecode]<br />
curl -s https://wordpress.com/ |<br />
pup link<br />
[/sourcecode]</p>
<p>That will return all of the <code>link</code> elements on the WordPress.com home page.  You can easily tighten it down to just the shortlink:</p>
<p>[sourcecode]<br />
curl -s https://wordpress.com/ |<br />
pup link[rel=shortlink]</p>
<p>&lt;link rel=&quot;shortlink&quot; href=&quot;http://wp.me/1&quot;&gt;<br />
[/sourcecode]</p>
<p>One final step further, get just the <code>href</code> value:</p>
<p>[sourcecode]<br />
curl -s https://wordpress.com/ |<br />
pup link[rel=shortlink] attr{href}</p>
<p>http://wp.me/<br />
[/sourcecode]</p>
<p>I like it.</p>
<p>Pup is open source, written in go and available at <a href="https://github.com/EricChiang/pup">https://github.com/EricChiang/pup</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>/2014/09/29/pup-command-line-html-processor/feed/</wfw:commentRss>
			<slash:comments>2</slash:comments>
		
		
			</item>
	</channel>
</rss>
