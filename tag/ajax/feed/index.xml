<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>ajax &#8211; Joseph Scott</title>
	<atom:link href="/tag/ajax/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description></description>
	<lastBuildDate>Wed, 14 Jul 2010 15:18:45 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.7.2</generator>
	<atom:link rel='hub' href='/?pushpress=hub'/>
	<item>
		<title>XHR / AJAX Performance &#8211; GET or POST?</title>
		<link>/2010/07/14/xhr-ajax-performance-get-or-post/</link>
					<comments>/2010/07/14/xhr-ajax-performance-get-or-post/#respond</comments>
		
		<dc:creator><![CDATA[josephscott]]></dc:creator>
		<pubDate>Wed, 14 Jul 2010 15:18:45 +0000</pubDate>
				<category><![CDATA[Posts]]></category>
		<category><![CDATA[ajax]]></category>
		<category><![CDATA[javascript]]></category>
		<category><![CDATA[performance]]></category>
		<category><![CDATA[tcp/ip]]></category>
		<category><![CDATA[xhr]]></category>
		<guid isPermaLink="false">http://josephscott.org/?p=2519</guid>

					<description><![CDATA[Update, 02 Dec 2014: updated the loadimpact.com links ( which were broken ) to use copies at the Internet Archive. During the summer of 2009 I posted about XMLHttpRequest (XHR) using multiple packets for HTTP POST, but HTTP GET requests only used one (in most cases). This led to several people recommending HTTP GET requests [&#8230;]]]></description>
										<content:encoded><![CDATA[<p><strong>Update, 02 Dec 2014:</strong> updated the loadimpact.com links ( which were broken ) to use copies at the Internet Archive.</p>
<hr />
<p>During the summer of 2009 I posted about <a href="http://josephscott.org/archives/2009/08/xmlhttprequest-xhr-uses-multiple-packets-for-http-post/">XMLHttpRequest (XHR) using multiple packets for HTTP POST</a>, but HTTP GET requests only used one (in most cases).  This led to several people recommending HTTP GET requests for AJAX when possible, to maximize performance.</p>
<p>Fortunately someone (<a href="http://loadimpact.com/">Load Impact</a>) took actual measurements to see what this looked like in the real world &#8211; <strike><a href="http://loadimpact.com/blog/ajax-get-or-post-which-is-best">AJAX GET or POST &#8211; which is best?</a></strike> <a href="https://web.archive.org/web/20100717202029/http://loadimpact.com/blog/ajax-get-or-post-which-is-best">AJAX GET or POST &#8211; which is best? (Internet Archive )</a>.  For details check out their <strike><a href="http://loadimpact.com/info/Analysis_of_browser_specific_characteristics.pdf">analysis report (PDF)</a></strike> <a href="https://web.archive.org/web/20101006110146/http://loadimpact.com/info/Analysis_of_browser_specific_characteristics.pdf">analysis report (PDF) (Internet Archive)</a> (warning, contains gory geek details).  The short version, what they observed is that not only was HTTP POST (multiple packets) not slower, it was faster.  This is definitely contrary to the basic mental model of how this should work.</p>
<p>If you are into front end performance and or TCP/IP go check it out, it would be great to get a solid explanation of why they are seeing these results.  On the flip side, if there is a flaw in the testing it would be good to identify that and come up with a new test.</p>
]]></content:encoded>
					
					<wfw:commentRss>/2010/07/14/xhr-ajax-performance-get-or-post/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Checking Out jQuery</title>
		<link>/2006/09/11/checking-out-jquery/</link>
					<comments>/2006/09/11/checking-out-jquery/#comments</comments>
		
		<dc:creator><![CDATA[josephscott]]></dc:creator>
		<pubDate>Tue, 12 Sep 2006 06:28:14 +0000</pubDate>
				<category><![CDATA[josephscott]]></category>
		<category><![CDATA[ajax]]></category>
		<category><![CDATA[javascript]]></category>
		<category><![CDATA[jquery]]></category>
		<category><![CDATA[mootools]]></category>
		<category><![CDATA[prototype]]></category>
		<guid isPermaLink="false">http://joseph.randomnetworks.com/archives/2006/09/11/checking-out-jquery/</guid>

					<description><![CDATA[I&#8217;ve been reading through some of the jQuery docs and I&#8217;m getting more and more interested. I&#8217;m aware of mootools (and Jonathan&#8217;s drag and drop example) and the latest updates to prototype. I hope to get around to playing with those as well. The compressed version of jQuery comes in at impressive 17,587 bytes. I [&#8230;]]]></description>
										<content:encoded><![CDATA[<p>I&#8217;ve been reading through some of the <a href="http://jquery.com/">jQuery</a> <a href="http://jquery.com/docs/">docs</a> and I&#8217;m getting more and more interested.  I&#8217;m aware of <a href="http://mootools.net/">mootools</a> (and Jonathan&#8217;s <a href="http://www.snook.ca/archives/javascript/mootools_drag_a/">drag and drop example</a>) and the latest <a href="http://encytemedia.com/blog/articles/2006/08/30/a-flurry-of-prototype-updates">updates</a> <a href="http://encytemedia.com/blog/articles/2006/09/05/the-flurry-continues-more-prototype-updates">to prototype</a>.  I hope to get around to playing with those as well.</p>
<p>The <a href="http://jquery.com/src/jquery-latest.pack.js">compressed version of jQuery</a> comes in at impressive 17,587 bytes.  I do wonder if there is any slow down in performance.  Either way, it is a huge leap from the 45,778 byte <a href="http://jquery.com/src/jquery-latest.js">uncompressed version of jQuery</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>/2006/09/11/checking-out-jquery/feed/</wfw:commentRss>
			<slash:comments>1</slash:comments>
		
		
			</item>
		<item>
		<title>Edit In Place: Version 0.2.1</title>
		<link>/2006/06/12/edit-in-place-version-021/</link>
					<comments>/2006/06/12/edit-in-place-version-021/#comments</comments>
		
		<dc:creator><![CDATA[josephscott]]></dc:creator>
		<pubDate>Mon, 12 Jun 2006 23:38:30 +0000</pubDate>
				<category><![CDATA[josephscott]]></category>
		<category><![CDATA[ajax]]></category>
		<category><![CDATA[editinplace]]></category>
		<category><![CDATA[eip]]></category>
		<category><![CDATA[javascript]]></category>
		<category><![CDATA[prototype]]></category>
		<guid isPermaLink="false">http://joseph.randomnetworks.com/archives/2006/06/12/edit-in-place-version-021/</guid>

					<description><![CDATA[I&#8217;ve been getting lots of great feedback on Edit In Place. As time permits I hope to fix problems and round out the feature set a bit more. To that end I&#8217;ve rolled out version 0.2.1. Here&#8217;s a list of what has changed since version 0.2.0: The bundled version of Prototype is now 1.5.0_rc0. This [&#8230;]]]></description>
										<content:encoded><![CDATA[<p>I&#8217;ve been getting lots of great feedback on <a href="http://josephscott.org/code/js/eip/">Edit In Place</a>.  As time permits I hope to fix problems and round out the feature set a bit more.  To that end I&#8217;ve rolled out <a href="http://josephscott.org/code/js/eip/releases/">version 0.2.1</a>.  Here&#8217;s a list of what has changed since <a href="http://joseph.randomnetworks.com/archives/2006/06/07/ajax-edit-in-place-with-prototype-version-020/">version 0.2.0</a>:</p>
<ul>
<li>The bundled version of <a href="http://prototype.conio.net/">Prototype</a> is now 1.5.0_rc0.  This was mostly to make sure that my code still worked with 1.5.0_rc0.</li>
<li>Attempt to deal with editing, updating and saving empty strings in a reasonable way</a>
</ul>
<p>I&#8217;ve updated the <a href="http://josephscott.org/code/js/eip/example.html">example page</a> to include editing a string that starts out empty.  The example now has a link to my <a href="http://joseph.randomnetworks.com/tag/editinplace">Edit In Place blog entries</a>, the <a href="http://josephscott.org/code/js/eip/edit.phps">edit.php source</a> (assuming your web server knows what to do with .phps files) and the main link at the top now goes <a>http://josephscott.org/code/js/eip/</a>.</p>
<p>Two new options have been introduced to format empty strings: empty (which is the css class to apply to empty strings, defaults to .eip_empty) and empty_text (the text to put in place of empty strings, defaults to &#8216;Click To Edit&#8217;).  These options are valid for all types (text and textarea).</p>
<p>So go to the <a href="http://josephscott.org/code/js/eip/example.html">example page</a> and click on the grey &#8216;Click To Edit&#8217; string and you&#8217;ll get an empty text box.  Type in something and you&#8217;ll get the new string instead.  Then delete the string and you&#8217;ll get the grey &#8216;Click To Edit&#8217; string again.  You can do the same thing with the original text and textarea examples.</p>
<p>I think that I&#8217;ve covered the empty string condition, but if you find a bug please <a href="http://joseph.randomnetworks.com/contact/">drop me a note</a>.  Include a patch if you are really feeling generous <img src="https://s.w.org/images/core/emoji/13.0.1/72x72/1f642.png" alt="ðŸ™‚" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
]]></content:encoded>
					
					<wfw:commentRss>/2006/06/12/edit-in-place-version-021/feed/</wfw:commentRss>
			<slash:comments>3</slash:comments>
		
		
			</item>
		<item>
		<title>I&#8217;m Sold on Prototype</title>
		<link>/2006/02/16/im-sold-on-prototype/</link>
					<comments>/2006/02/16/im-sold-on-prototype/#respond</comments>
		
		<dc:creator><![CDATA[josephscott]]></dc:creator>
		<pubDate>Fri, 17 Feb 2006 07:14:39 +0000</pubDate>
				<category><![CDATA[josephscott]]></category>
		<category><![CDATA[ajax]]></category>
		<category><![CDATA[firebug]]></category>
		<category><![CDATA[javascript]]></category>
		<category><![CDATA[prototype]]></category>
		<guid isPermaLink="false">http://joseph.randomnetworks.com/archives/2006/02/16/im-sold-on-prototype/</guid>

					<description><![CDATA[For years I avoided Javascript as much as possible. It was a pain to try and support all of the versions of Internet Explorer (IE) and Netscape Navigator. It just was not worth it. As time went on my aversion to Javascript lessened, but I never made the effort to really learn it as a [&#8230;]]]></description>
										<content:encoded><![CDATA[<p>For years I avoided <a href="http://en.wikipedia.org/wiki/Javascript">Javascript</a> as much as possible.  It was a pain to try and support all of the versions of <a href="http://www.microsoft.com/windows/ie/default.mspx">Internet Explorer</a> (IE) and <a href="http://en.wikipedia.org/wiki/Netscape">Netscape Navigator</a>.  It just was not worth it.  As time went on my aversion to Javascript lessened, but I never made the effort to really learn it as a language.  I would learn just enough to accomplish a small specific task.</p>
<p>Fast forward to 2005/2006.  <a href="http://www.adaptivepath.com/publications/essays/archives/000385.php">AJAX</a> has become the buzzword of choice.  Some smart folks have learned to deal with most/many of the issues that are still there between IE and (now) Firefox.  This has given rise to Javascript libraries, with <a href="http://prototype.conio.net/">Prototype</a> being one of the more popular.</p>
<p>After a few brief attempts trying to figure out how to do something useful in Javascript with Prototype I figured my lack of real Javascript skills were just not up to the job.  Then <a href="http://www.yahoo.com/">Yahoo</a> came out with their <a href="http://developer.yahoo.net/yui/">Yahoo! User Interface Library</a> (YUI), which got me thinking about Prototype again.  After reading through more examples and documentation I was finally able to accomplish exactly what I wanted.</p>
<p>I&#8217;m now sold on using Prototype.  <a href="http://conio.net/">Sam Stephenson</a> deserves heaps of praise.  To help out others who are looking for documentation and examples, here is a list of resources for Prototype.</p>
<ul>
<li><b><a href="http://prototype.conio.net/">Prototype</a></b>: The official website for Prototype.</li>
<li><b><a href="http://dev.rubyonrails.org/browser/spinoffs/prototype/">Prototype Subversion repository</a></b>: Sometimes looking at the source (and its history) is the only way to answer a question.</li>
<li><b><a href="http://www.sergiopereira.com/articles/prototype.js.html">Developer Notes for prototype.js</a></b>: This site provides great examples on using Prototype and an amazing reference section.  If you use Prototype at all this is a site you&#8217;ll want to bookmarked for easy access.</li>
<li><b><a href="http://julian.empiregn.com/2005-11/Easily_upgrade_your_forms_to_AJAX/">Easily upgrade your forms to AJAX</a></b>: A lot of AJAX activity focuses around HTML forms, this page provides a basic example on how Prototype makes that possible.</li>
<li><b><a href="http://wiki.script.aculo.us/scriptaculous/show/Prototype">script.aculo.us prototype wiki</a></b>: Another good reference site with some examples.</li>
<li><b><a href="http://blogs.ebusiness-apps.com/jordan/pages/Prototype%20Library%20Info.htm">Overview of the Prototype Javascript Library</a></b>: Provides a good, quick over view of what is possible.</li>
</ul>
<p>While trying to debug AJAX I recommend using the Firefox plugin called <a href="https://addons.mozilla.org/extensions/moreinfo.php?id=1843&amp;application=firefox">FireBug</a>.  Turn on the &#8220;XMLHttpRequest Spy&#8221; feature and you&#8217;ll be able to monitor all of the AJAX transactions that are going on.</p>
<p>Of course Prototype isn&#8217;t perfect, there are still important limitations and issues to keep in mind.  For instance, the target platforms for Prototype are (from the <a href="http://dev.rubyonrails.org/browser/spinoffs/prototype/README">README</a>):</p>
<blockquote cite="http://dev.rubyonrails.org/browser/spinoffs/prototype/README"><p>
Microsoft Internet Explorer for Windows, version 6.0 and higher<br />
Mozilla Firefox 1.0/Mozilla 1.7 and higher<br />
Apple Safari 1.2 and higher
</p></blockquote>
<p>I&#8217;m also curious to see how it stacks up against the new Yahoo User Interface Library.  Either way this is an exciting time in the land of Javascript.</p>
]]></content:encoded>
					
					<wfw:commentRss>/2006/02/16/im-sold-on-prototype/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>API Only Services?</title>
		<link>/2005/07/13/api-only-services/</link>
					<comments>/2005/07/13/api-only-services/#comments</comments>
		
		<dc:creator><![CDATA[josephscott]]></dc:creator>
		<pubDate>Wed, 13 Jul 2005 21:51:00 +0000</pubDate>
				<category><![CDATA[josephscott]]></category>
		<category><![CDATA[ajax]]></category>
		<category><![CDATA[rest]]></category>
		<category><![CDATA[soap]]></category>
		<category><![CDATA[xml-rpc]]></category>
		<guid isPermaLink="false">http://joseph.randomnetworks.com/?p=432</guid>

					<description><![CDATA[Along with most folks, I&#8217;m thrilled when I see APIs made available for cool services. It seems to me that this what Tim O&#8217;Reilly means when using the term Web 2.0. With open and usable APIs others are free to create entirely new &#8220;products&#8221; by mix and matching APIs from various sources. This is great [&#8230;]]]></description>
										<content:encoded><![CDATA[<p>Along with most folks, I&#8217;m thrilled when I see APIs made available for cool services.  It seems to me that this what <a href="http://tim.oreilly.com/">Tim O&#8217;Reilly</a> means when using the term <a href="http://blogs.zdnet.com/BTL/index.php?p=1565">Web 2.0</a>.  With open and usable APIs others are free to create entirely new &#8220;products&#8221; by mix and matching APIs from various sources.  This is great because it allows so many people to be involved in the process, not just the companies who came up with the original services.  The more people involved, the bigger the pool of imagination from which new products and services can emerge.</p>
<p>For the most part, a service is made available (like <a href="http://maps.google.com/">Google Maps</a>), reaches some level of popularity and then, sometimes much later, an API is made available for others to use.  This isn&#8217;t always the case, Yahoo!&#8217;s <a href="http://myweb2.search.yahoo.com/">My Web 2.0</a> was announced and then made some initial APIs available on day one.  What I haven&#8217;t really seen much of is APIs being put out first and letting services grow around them.</p>
<p>So are we going to see API only services in the future?  I&#8217;m not sure, but I&#8217;d argue that API only/focused services are the way to go in the future.  Just like job specialization allows companies to scale in ways not possible before, I believe that API specialization would allow the Internet to scale in ways we&#8217;ve yet to see.  Let&#8217;s take a basic example, spell check.  Virtually anytime you use a <a href="http://www.w3schools.com/tags/tag_textarea.asp">textarea</a> on a web page it would be helpful to offer a spell check feature.  When <a href="http://www.gmail.com/">Gmail</a> offered an <a href="http://en.wikipedia.org/wiki/AJAX">AJAX</a>ified spell check feature we were all impressed and wanted to use it in other places.  But who wants to recreate the wheel for spell check every where that it might be handy to have?  In part the popularity of AJAX has solved some of this problem, by providing frameworks that make adding such features to web pages easier.</p>
<p>Going down one more layer, what actually does the spell checking?  Most languages have hooks into <a href="http://aspell.sourceforge.net/">Aspell</a> that allows them to does this.  But does everyone who wants to use spell check on their website need to have Aspell installed and working with their language of choice?  Why isn&#8217;t there a central service providing a spell check API?  Why can&#8217;t they simply make use of a publicly available spell check API (via REST/SOAP/XML-RPC, etc)?  This wouldn&#8217;t have to be limited to web pages either, any application could simply talk to the spell check server and get the information it needed.</p>
<p>There&#8217;s no reason to only have one spell check server, competition is a good thing and if one was offline for awhile then having others to fall back on would be helpful.  For that matter there&#8217;s no reason why you couldn&#8217;t have a local spell check server just for your company/office, as long at it made use of the same APIs so that client applications would be able to use as a drop in replacement.  Imagine being able to enter a URL in Microsoft Word in a settings area and have it make use of your company spell check server, how cool would that be?  For better performance caching could be done either at some local network server and/or on the client application.  In many ways this is the Web/DNS model all over again, but for APIs.</p>
<p>If we really are going to fully embrace the capabilities that the Internet makes possible I think that specialization at the API level is where things will go.</p>
]]></content:encoded>
					
					<wfw:commentRss>/2005/07/13/api-only-services/feed/</wfw:commentRss>
			<slash:comments>7</slash:comments>
		
		
			</item>
	</channel>
</rss>
