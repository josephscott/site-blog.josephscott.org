<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>cloudfront &#8211; Joseph Scott</title>
	<atom:link href="/tag/cloudfront/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description></description>
	<lastBuildDate>Fri, 12 Nov 2010 17:11:11 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.7.2</generator>
	<atom:link rel='hub' href='/?pushpress=hub'/>
	<item>
		<title>gzip support for Amazon Web Services CloudFront</title>
		<link>/2010/11/12/gzip-support-for-amazon-web-services-cloudfront/</link>
					<comments>/2010/11/12/gzip-support-for-amazon-web-services-cloudfront/#respond</comments>
		
		<dc:creator><![CDATA[josephscott]]></dc:creator>
		<pubDate>Fri, 12 Nov 2010 17:11:11 +0000</pubDate>
				<category><![CDATA[Asides]]></category>
		<category><![CDATA[amazon]]></category>
		<category><![CDATA[cloudfront]]></category>
		<category><![CDATA[compression]]></category>
		<category><![CDATA[http]]></category>
		<guid isPermaLink="false">http://josephscott.org/?p=3167</guid>

					<description><![CDATA[With the recent announcement of Custom Origin support in CloudFront it is now possible to use the standard HTTP Accept-Encoding method for serving gzipped content if you are using a Custom Origin. Although not specifically mentioned in the release announcement you can verify this in the Custom Origins Appendix of the CloudFront Developer Guide. CloudFront [&#8230;]]]></description>
										<content:encoded><![CDATA[<blockquote><p>With the recent announcement of Custom Origin support in CloudFront it is now possible to use the standard HTTP Accept-Encoding method for serving gzipped content if you are using a Custom Origin. Although not specifically mentioned in the release announcement you can verify this in the Custom Origins Appendix of the CloudFront Developer Guide. CloudFront will now forward the Accept-Encoding HTTP header to your origin server where you can ensure the appropriate content is served based on the supported encodings. CloudFront will then cache multiple versions of this content, the uncompressed version and the gzipped version and serve these to clients depending on the value of their Accept-Encoding header for all future requests.</p></blockquote>
<p>via <a href='http://www.nomitor.com/blog/2010/11/10/gzip-support-for-amazon-web-services-cloudfront/'>gzip support for Amazon Web Services CloudFront &#8211; nomitor</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>/2010/11/12/gzip-support-for-amazon-web-services-cloudfront/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
	</channel>
</rss>
