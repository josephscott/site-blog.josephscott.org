<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>html &#8211; Joseph Scott</title>
	<atom:link href="/tag/html/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description></description>
	<lastBuildDate>Wed, 22 Aug 2018 16:52:22 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.7.2</generator>
	<atom:link rel='hub' href='/?pushpress=hub'/>
	<item>
		<title>pup: Command Line HTML Parsing</title>
		<link>/2018/08/22/pup-command-line-html-parsing/</link>
					<comments>/2018/08/22/pup-command-line-html-parsing/#comments</comments>
		
		<dc:creator><![CDATA[josephscott]]></dc:creator>
		<pubDate>Wed, 22 Aug 2018 16:52:22 +0000</pubDate>
				<category><![CDATA[Posts]]></category>
		<category><![CDATA[go]]></category>
		<category><![CDATA[html]]></category>
		<category><![CDATA[jq]]></category>
		<category><![CDATA[pup]]></category>
		<guid isPermaLink="false">https://josephscott.org/?p=15680</guid>

					<description><![CDATA[pup, the three sentence description nails is: pup is a command line tool for processing HTML. It reads from stdin, prints to stdout, and allows the user to filter parts of the page using CSS selectors. Inspired by jq, pup aims to be a fast and flexible way of exploring HTML from the terminal. If [&#8230;]]]></description>
										<content:encoded><![CDATA[<p><a href="https://github.com/ericchiang/pup">pup</a>, the three sentence description nails is:</p>
<blockquote><p>
pup is a command line tool for processing HTML. It reads from stdin, prints to stdout, and allows the user to filter parts of the page using CSS selectors.</p>
<p>Inspired by jq, pup aims to be a fast and flexible way of exploring HTML from the terminal.
</p></blockquote>
<p>If you have used jq, this is going to feel familiar, just for an HTML context.  With the option to <a href="https://github.com/ericchiang/pup#json">output the results as JSON</a>, you could find your self using pup in conjunction with jq.</p>
<p>There are several examples in the <a href="https://github.com/ericchiang/pup">README</a>, here are a few of my own.</p>
<p>List all of the <code>IMG</code> tags from cnn.com:<br />
[shell]<br />
curl -s https://www.cnn.com/ | pup &#8216;img&#8217;<br />
[/shell]</p>
<p>Now get it back as a JSON array:<br />
[shell]<br />
curl -s https://www.cnn.com/ | pup &#8216;img json{}&#8217;<br />
[/shell]</p>
<p>List all of the <code>LINK</code> attributes that have a <code>rel="preload"</code> attribute:</p>
<p>[shell]<br />
curl -s https://www.cnn.com/ | pup &#8216;link[rel=&quot;preload&quot;]&#8217;<br />
[/shell]</p>
<p>I could see pup and jq becoming standard utilities on Unix-like systems.</p>
]]></content:encoded>
					
					<wfw:commentRss>/2018/08/22/pup-command-line-html-parsing/feed/</wfw:commentRss>
			<slash:comments>1</slash:comments>
		
		
			</item>
		<item>
		<title>Responsive Images</title>
		<link>/2015/11/13/responsive-images/</link>
					<comments>/2015/11/13/responsive-images/#comments</comments>
		
		<dc:creator><![CDATA[josephscott]]></dc:creator>
		<pubDate>Fri, 13 Nov 2015 14:30:10 +0000</pubDate>
				<category><![CDATA[Posts]]></category>
		<category><![CDATA[html]]></category>
		<category><![CDATA[jake-archibald]]></category>
		<guid isPermaLink="false">https://josephscott.org/?p=13739</guid>

					<description><![CDATA[Jake Archibald on The anatomy of responsive images: In order for the browser to pick the right image, it needs to know: &#8211; URLs for the image at various sizes &#8211; The decoded width of each of those image resources &#8211; The width of the `&#60;img&#62;` Picture&#8216;s and img&#8216;s oh my!]]></description>
										<content:encoded><![CDATA[<p>Jake Archibald on <a href="https://jakearchibald.com/2015/anatomy-of-responsive-images/">The anatomy of responsive images</a>:</p>
<blockquote><p>
In order for the browser to pick the right image, it needs to know:</p>
<p>&#8211; URLs for the image at various sizes<br />
&#8211; The decoded width of each of those image resources<br />
&#8211; The width of the `&lt;img&gt;`
</p></blockquote>
<p><code>Picture</code>&#8216;s and <code>img</code>&#8216;s oh my!</p>
]]></content:encoded>
					
					<wfw:commentRss>/2015/11/13/responsive-images/feed/</wfw:commentRss>
			<slash:comments>2</slash:comments>
		
		
			</item>
		<item>
		<title>Autofill Fields</title>
		<link>/2015/06/24/autofill-fields/</link>
					<comments>/2015/06/24/autofill-fields/#respond</comments>
		
		<dc:creator><![CDATA[josephscott]]></dc:creator>
		<pubDate>Wed, 24 Jun 2015 14:22:49 +0000</pubDate>
				<category><![CDATA[Posts]]></category>
		<category><![CDATA[autofill]]></category>
		<category><![CDATA[html]]></category>
		<guid isPermaLink="false">https://josephscott.org/?p=12863</guid>

					<description><![CDATA[The HTML spec section on autofill has a list of autofill field keywords. Things like address-line1, cc-exp-month, and so on. There are examples of how to use these in the Help users checkout faster with Autofill article at html5rocks.com.]]></description>
										<content:encoded><![CDATA[<p>The HTML spec section on <a href="https://html.spec.whatwg.org/multipage/forms.html#autofill">autofill</a> has a list of <a href="https://html.spec.whatwg.org/multipage/forms.html#autofill-field">autofill field keywords</a>.  Things like <code>address-line1</code>, <code>cc-exp-month</code>, and so on.</p>
<p>There are examples of how to use these in the <a href="http://updates.html5rocks.com/2015/06/checkout-faster-with-Autofill">Help users checkout faster with Autofill</a> article at html5rocks.com.</p>
]]></content:encoded>
					
					<wfw:commentRss>/2015/06/24/autofill-fields/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>pup, Command Line HTML Processor</title>
		<link>/2014/09/29/pup-command-line-html-processor/</link>
					<comments>/2014/09/29/pup-command-line-html-processor/#comments</comments>
		
		<dc:creator><![CDATA[josephscott]]></dc:creator>
		<pubDate>Mon, 29 Sep 2014 14:33:10 +0000</pubDate>
				<category><![CDATA[Posts]]></category>
		<category><![CDATA[eric-chiang]]></category>
		<category><![CDATA[go]]></category>
		<category><![CDATA[html]]></category>
		<category><![CDATA[pup]]></category>
		<guid isPermaLink="false">https://josephscott.org/?p=11027</guid>

					<description><![CDATA[Last year I mentioned a nifty little command line tool called jq. It had a very specific purpose: make it easy to process JSON. That same line of thinking inspired pup, from Eric Chiang: pup is a command line tool for processing HTML. It reads from stdin, prints to stdout, and allows the user to [&#8230;]]]></description>
										<content:encoded><![CDATA[<p>Last year I mentioned a nifty little command line tool called <a href="https://josephscott.org/archives/2013/03/jq-command-line-json-processor/">jq</a>.  It had a very specific purpose: make it easy to process JSON.  That same line of thinking inspired <a href="https://github.com/EricChiang/pup">pup</a>, from <a href="https://twitter.com/erchiang">Eric Chiang</a>:</p>
<blockquote><p>
pup is a command line tool for processing HTML. It reads from stdin, prints to stdout, and allows the user to filter parts of the page using CSS selectors.
</p></blockquote>
<p>Here is a little taste of how this works:</p>
<p>[sourcecode]<br />
curl -s https://wordpress.com/ |<br />
pup link<br />
[/sourcecode]</p>
<p>That will return all of the <code>link</code> elements on the WordPress.com home page.  You can easily tighten it down to just the shortlink:</p>
<p>[sourcecode]<br />
curl -s https://wordpress.com/ |<br />
pup link[rel=shortlink]</p>
<p>&lt;link rel=&quot;shortlink&quot; href=&quot;http://wp.me/1&quot;&gt;<br />
[/sourcecode]</p>
<p>One final step further, get just the <code>href</code> value:</p>
<p>[sourcecode]<br />
curl -s https://wordpress.com/ |<br />
pup link[rel=shortlink] attr{href}</p>
<p>http://wp.me/<br />
[/sourcecode]</p>
<p>I like it.</p>
<p>Pup is open source, written in go and available at <a href="https://github.com/EricChiang/pup">https://github.com/EricChiang/pup</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>/2014/09/29/pup-command-line-html-processor/feed/</wfw:commentRss>
			<slash:comments>2</slash:comments>
		
		
			</item>
		<item>
		<title>HTML5 Security Cheatsheet</title>
		<link>/2014/04/17/cure53h5sc/</link>
					<comments>/2014/04/17/cure53h5sc/#respond</comments>
		
		<dc:creator><![CDATA[josephscott]]></dc:creator>
		<pubDate>Thu, 17 Apr 2014 14:22:33 +0000</pubDate>
				<category><![CDATA[Posts]]></category>
		<category><![CDATA[html]]></category>
		<category><![CDATA[security]]></category>
		<guid isPermaLink="false">https://josephscott.org/?p=10104</guid>

					<description><![CDATA[A list of web related security issues is being collected at html5sec.org, with a GitHub repo to send in updates. There are so many ways that bad things can happen in a web environment that sharing details in an open and public way like this is really important.]]></description>
										<content:encoded><![CDATA[<p>A list of web related security issues is being collected at <a href="https://html5sec.org/" title="I like the live test links.">html5sec.org</a>, with a <a href="https://github.com/cure53/H5SC" title="Yep, everything is on GitHub.">GitHub repo</a> to send in updates.</p>
<p>There are so many ways that bad things can happen in a web environment that sharing details in an open and public way like this is really important.</p>
]]></content:encoded>
					
					<wfw:commentRss>/2014/04/17/cure53h5sc/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Designing Hyperlinks</title>
		<link>/2013/07/15/designing-hyperlinks/</link>
					<comments>/2013/07/15/designing-hyperlinks/#comments</comments>
		
		<dc:creator><![CDATA[josephscott]]></dc:creator>
		<pubDate>Mon, 15 Jul 2013 23:21:40 +0000</pubDate>
				<category><![CDATA[Posts]]></category>
		<category><![CDATA[css]]></category>
		<category><![CDATA[html]]></category>
		<guid isPermaLink="false">https://josephscott.org/?p=8593</guid>

					<description><![CDATA[Discussion on how to design hyperlinks. One point that didn&#8217;t get much coverage: Hyperlinks should appear interactable. The trend towards flattening everything misses this recommendation. Applying gray scale then blur to see if you can still see the emphasis was something I remember Cameron Moll mentioning years ago. I don&#8217;t remember too many things from [&#8230;]]]></description>
										<content:encoded><![CDATA[<p>Discussion on how to <a href='http://sixrevisions.com/usability/hyperlink-design/'>design hyperlinks</a>.  One point that didn&#8217;t get much coverage:</p>
<blockquote><p>
Hyperlinks should appear interactable.
</p></blockquote>
<p>The trend towards flattening everything misses this recommendation.</p>
<p>Applying gray scale then blur to see if you can still see the emphasis was something I remember <a href="http://www.cameronmoll.com/">Cameron Moll</a> mentioning years ago.  I don&#8217;t remember too many things from his presentation that day, but that one has stuck with me.</p>
<p>In the end sticking with the traditional blue link and pushing the underline further down to make the link text easier to read is the best option.</p>
]]></content:encoded>
					
					<wfw:commentRss>/2013/07/15/designing-hyperlinks/feed/</wfw:commentRss>
			<slash:comments>1</slash:comments>
		
		
			</item>
		<item>
		<title>HTML Purifier</title>
		<link>/2013/03/01/html-purifier/</link>
					<comments>/2013/03/01/html-purifier/#respond</comments>
		
		<dc:creator><![CDATA[josephscott]]></dc:creator>
		<pubDate>Fri, 01 Mar 2013 21:15:13 +0000</pubDate>
				<category><![CDATA[Posts]]></category>
		<category><![CDATA[filter]]></category>
		<category><![CDATA[html]]></category>
		<category><![CDATA[html-purifier]]></category>
		<category><![CDATA[PHP]]></category>
		<category><![CDATA[WordPress]]></category>
		<category><![CDATA[wordpress-plugin]]></category>
		<guid isPermaLink="false">https://josephscott.org/?p=6627</guid>

					<description><![CDATA[In the world of HTML filtering in PHP HTML Purifier appears to be the current top dog. WordPress long ago forked kses for HTML filtering, which is fine, but as John Godley ( a co-worker at Automattic ) put it: There is nothing fundamentally wrong with the way WordPress and bbPress filters comments, and in [&#8230;]]]></description>
										<content:encoded><![CDATA[<p><a href="https://sharedat.net/s/fCDw"><img loading="lazy" src="https://sharedat.net/f/fC/fCDw/html-purifier.png" width="505" height="168" class="aligncenter" /></a></p>
<p>In the world of HTML filtering in PHP <a href='http://htmlpurifier.org/'>HTML Purifier</a> appears to be the current top dog.  WordPress long ago forked <a href="http://sourceforge.net/projects/kses/">kses</a> for HTML filtering, which is fine, but as <a href="http://urbangiraffe.com/">John Godley</a> ( a co-worker at <a href="http://automattic.com/">Automattic</a> ) put it:</p>
<blockquote><p>
There is nothing fundamentally wrong with the way WordPress and bbPress filters comments, and in fact there has been no security alert related to this. However, this doesn’t detract from the desire to make things better, and the fact that HTML Purifier is much more thorough and exhaustive.
</p></blockquote>
<p>He wrote the <a href="http://wordpress.org/extend/plugins/html-purified/">HTML Purified WordPress plugin</a>, which &#8220;replaces the default WordPress comments filters with HTML Purifier&#8221;.</p>
<p>For new PHP projects, or ones that allow you to easily swap in/out libraries, it looks like HTML Purifier is the current <a href="http://htmlpurifier.org/comparison">best option for HTML filtering</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>/2013/03/01/html-purifier/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Minimum HTML 5 Document</title>
		<link>/2008/12/02/minimum-html-5-document/</link>
					<comments>/2008/12/02/minimum-html-5-document/#comments</comments>
		
		<dc:creator><![CDATA[josephscott]]></dc:creator>
		<pubDate>Tue, 02 Dec 2008 16:00:52 +0000</pubDate>
				<category><![CDATA[Posts]]></category>
		<category><![CDATA[html]]></category>
		<guid isPermaLink="false">http://josephscott.org/?p=503</guid>

					<description><![CDATA[Dustin Diaz recently posted about skinny doctypes, which basically boiled down to: [sourcecode lang=&#8221;html&#8221;] [/sourcecode] Folks in the comments pointed out that this is the doctype that HTML 5 uses. I&#8217;d only been glancing at HTML 5 from time to time, but this got me to look at it a little bit closer. I went [&#8230;]]]></description>
										<content:encoded><![CDATA[<p>Dustin Diaz recently posted about <a href="http://www.dustindiaz.com/skinny-on-doctypes/">skinny doctypes</a>, which basically boiled down to:</p>
<p>[sourcecode lang=&#8221;html&#8221;]</p>
<p>[/sourcecode]</p>
<p>Folks in the comments pointed out that this is the doctype that <a href="http://www.w3.org/html/wg/html5/">HTML 5</a> uses.  I&#8217;d only been glancing at HTML 5 from time to time, but this got me to look at it a little bit closer.  I went to the <a href="http://validator.w3.org/">W3C Validator</a> to see what the minimum HTML 5 document looked like.  Here&#8217;s the smallest document that still validated:</p>
<p>[sourcecode lang=&#8221;html&#8221;]</p>
<p>    <title></title></p>
<p>[/sourcecode]</p>
<p>Now this is what I&#8217;m talking about, simple and to the point.</p>
<p>The validator does give one warning for this document, but it&#8217;s simply to mention that HTML 5 conformance is still experimental.</p>
]]></content:encoded>
					
					<wfw:commentRss>/2008/12/02/minimum-html-5-document/feed/</wfw:commentRss>
			<slash:comments>4</slash:comments>
		
		
			</item>
		<item>
		<title>Links for Thu 17 Jan 2008</title>
		<link>/2008/01/17/links-for-thu-17-jan-2008/</link>
					<comments>/2008/01/17/links-for-thu-17-jan-2008/#respond</comments>
		
		<dc:creator><![CDATA[josephscott]]></dc:creator>
		<pubDate>Fri, 18 Jan 2008 00:30:08 +0000</pubDate>
				<category><![CDATA[Link Dump]]></category>
		<category><![CDATA[autocomplete]]></category>
		<category><![CDATA[html]]></category>
		<category><![CDATA[javascript]]></category>
		<category><![CDATA[Links]]></category>
		<category><![CDATA[openid]]></category>
		<category><![CDATA[PHP]]></category>
		<category><![CDATA[python]]></category>
		<category><![CDATA[vim]]></category>
		<category><![CDATA[yahoo]]></category>
		<guid isPermaLink="false">http://joseph.randomnetworks.com/archives/2008/01/17/links-for-thu-17-jan-2008/</guid>

					<description><![CDATA[Autocomplete HTML/CSS/JavaScript/python/xml/php/c with CTRL-X CTRL-O &#8211; parsed.org &#8211; Add autocomplete features to Vim. Wish I&#8217;d come across this sooner. Tags: vim autocomplete php javascript html python OpenID Splash &#8211; Looks like Yahoo has taken major dive into the OpenID pool. Tags: openid yahoo]]></description>
										<content:encoded><![CDATA[<ul>
<li>
<p><a href="http://www.parsed.org/tip/415/">Autocomplete HTML/CSS/JavaScript/python/xml/php/c with CTRL-X CTRL-O &#8211; parsed.org</a> &#8211; Add autocomplete features to Vim.  Wish I&#8217;d come across this sooner. <br /> Tags: <a href="http://del.icio.us/josephscott/vim">vim</a> <a href="http://del.icio.us/josephscott/autocomplete">autocomplete</a> <a href="http://del.icio.us/josephscott/php">php</a> <a href="http://del.icio.us/josephscott/javascript">javascript</a> <a href="http://del.icio.us/josephscott/html">html</a> <a href="http://del.icio.us/josephscott/python">python</a>  </p>
</li>
<li>
<p><a href="http://openid.yahoo.com/">OpenID Splash</a> &#8211; Looks like Yahoo has taken major dive into the OpenID pool. <br /> Tags: <a href="http://del.icio.us/josephscott/openid">openid</a> <a href="http://del.icio.us/josephscott/yahoo">yahoo</a>  </p>
</li>
</ul>
]]></content:encoded>
					
					<wfw:commentRss>/2008/01/17/links-for-thu-17-jan-2008/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Links for Mon 14 Jan 2008</title>
		<link>/2008/01/14/links-for-mon-14-jan-2008/</link>
					<comments>/2008/01/14/links-for-mon-14-jan-2008/#respond</comments>
		
		<dc:creator><![CDATA[josephscott]]></dc:creator>
		<pubDate>Tue, 15 Jan 2008 00:30:15 +0000</pubDate>
				<category><![CDATA[Link Dump]]></category>
		<category><![CDATA[css]]></category>
		<category><![CDATA[digg]]></category>
		<category><![CDATA[filesystem]]></category>
		<category><![CDATA[filter]]></category>
		<category><![CDATA[html]]></category>
		<category><![CDATA[htmlpurifier]]></category>
		<category><![CDATA[Links]]></category>
		<category><![CDATA[macosx]]></category>
		<category><![CDATA[menubar]]></category>
		<category><![CDATA[PHP]]></category>
		<category><![CDATA[xss]]></category>
		<category><![CDATA[zfs]]></category>
		<guid isPermaLink="false">http://joseph.randomnetworks.com/archives/2008/01/14/links-for-mon-14-jan-2008/</guid>

					<description><![CDATA[woork: Digg-like navigation bar using CSS &#8211; Add this to my collection of pretty rounded menu bars. Tags: css digg menubar HTML Purifier &#8211; Filter your HTML the standards-compliant way! &#8211; Makes some big claims, would be interesting to see it put to the test. Tags: html php htmlpurifier filter xss zfs &#8211; Trac &#8211; [&#8230;]]]></description>
										<content:encoded><![CDATA[<ul>
<li>
<p><a href="http://woork.blogspot.com/2008/01/digg-like-navigation-bar-using-css.html">woork: Digg-like navigation bar using CSS</a> &#8211; Add this to my collection of pretty rounded menu bars. <br /> Tags: <a href="http://del.icio.us/josephscott/css">css</a> <a href="http://del.icio.us/josephscott/digg">digg</a> <a href="http://del.icio.us/josephscott/menubar">menubar</a>  </p>
</li>
<li>
<p><a href="http://htmlpurifier.org/">HTML Purifier &#8211; Filter your HTML the standards-compliant way!</a> &#8211; Makes some big claims, would be interesting to see it put to the test. <br /> Tags: <a href="http://del.icio.us/josephscott/html">html</a> <a href="http://del.icio.us/josephscott/php">php</a> <a href="http://del.icio.us/josephscott/htmlpurifier">htmlpurifier</a> <a href="http://del.icio.us/josephscott/filter">filter</a> <a href="http://del.icio.us/josephscott/xss">xss</a>  </p>
</li>
<li>
<p><a href="http://trac.macosforge.org/projects/zfs/wiki/">zfs &#8211; Trac</a> &#8211; Source and binaries for ZFS on Mac OS X.  Seems safe to say that we&#8217;ll see ZFS as a built in feature in some future release of OS X (10.6 perhaps?). <br /> Tags: <a href="http://del.icio.us/josephscott/zfs">zfs</a> <a href="http://del.icio.us/josephscott/macosx">macosx</a> <a href="http://del.icio.us/josephscott/filesystem">filesystem</a>  </p>
</li>
</ul>
]]></content:encoded>
					
					<wfw:commentRss>/2008/01/14/links-for-mon-14-jan-2008/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
	</channel>
</rss>
