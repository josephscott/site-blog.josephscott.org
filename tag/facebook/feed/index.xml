<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>facebook &#8211; Joseph Scott</title>
	<atom:link href="/tag/facebook/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description></description>
	<lastBuildDate>Tue, 22 May 2018 19:54:23 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.7.2</generator>
	<atom:link rel='hub' href='/?pushpress=hub'/>
	<item>
		<title>Revenue And Profit, Per Employee</title>
		<link>/2018/05/22/revenue-and-profit-per-employee/</link>
					<comments>/2018/05/22/revenue-and-profit-per-employee/#respond</comments>
		
		<dc:creator><![CDATA[josephscott]]></dc:creator>
		<pubDate>Tue, 22 May 2018 19:53:20 +0000</pubDate>
				<category><![CDATA[Posts]]></category>
		<category><![CDATA[amazon]]></category>
		<category><![CDATA[apple]]></category>
		<category><![CDATA[dustin-curtis]]></category>
		<category><![CDATA[facebook]]></category>
		<category><![CDATA[google]]></category>
		<category><![CDATA[microsoft]]></category>
		<category><![CDATA[profit]]></category>
		<category><![CDATA[revenue]]></category>
		<category><![CDATA[Twitter]]></category>
		<guid isPermaLink="false">https://josephscott.org/?p=15165</guid>

					<description><![CDATA[Two years ago Dustin Curtis mentioned 2015 revenue and profit per employee for Yahoo, Twitter, Microsoft, Google, and Facebook. I thought this was an interesting way to look at this list, so I&#8217;m going update it, with a few changes. First, I&#8217;m going to remove Yahoo ( Oath? ). Next, I&#8217;m adding Amazon and Netflix. [&#8230;]]]></description>
										<content:encoded><![CDATA[<p>Two years ago <a href="https://dustincurtis.com/">Dustin Curtis</a> mentioned 2015 <a href="https://twitter.com/dcurtis/status/694266299317243904">revenue</a> and <a href="https://twitter.com/dcurtis/status/694586397588467712">profit</a> per employee for Yahoo, Twitter, Microsoft, Google, and Facebook.</p>
<p><a href="/wp-content/uploads/2018/05/revenue-per-employee.png"><img loading="lazy" src="/wp-content/uploads/2018/05/revenue-per-employee-1024x897.png" alt="" width="840" height="736" class="aligncenter size-large wp-image-16653" srcset="/wp-content/uploads/2018/05/revenue-per-employee-1024x897.png 1024w, /wp-content/uploads/2018/05/revenue-per-employee-300x263.png 300w, /wp-content/uploads/2018/05/revenue-per-employee-768x673.png 768w, /wp-content/uploads/2018/05/revenue-per-employee-1200x1052.png 1200w, /wp-content/uploads/2018/05/revenue-per-employee.png 1230w" sizes="(max-width: 840px) 100vw, 840px" /></a></p>
<p><a href="/wp-content/uploads/2018/05/profit-per-employee.png"><img loading="lazy" src="/wp-content/uploads/2018/05/profit-per-employee-1024x895.png" alt="" width="840" height="734" class="aligncenter size-large wp-image-16652" srcset="/wp-content/uploads/2018/05/profit-per-employee-1024x895.png 1024w, /wp-content/uploads/2018/05/profit-per-employee-300x262.png 300w, /wp-content/uploads/2018/05/profit-per-employee-768x671.png 768w, /wp-content/uploads/2018/05/profit-per-employee.png 1192w" sizes="(max-width: 840px) 100vw, 840px" /></a></p>
<p>I thought this was an interesting way to look at this list, so I&#8217;m going update it, with a few changes.  First, I&#8217;m going to remove Yahoo ( Oath? ).  Next, I&#8217;m adding Amazon and Netflix.</p>
<p>The revenue/profit will be for calendar year 2017, with the exceptions of Microsoft ( 30 Jun 2017 ) and Apple ( 30 Sep 2017 ).  The numbers are pulled from the Yahoo ( Oath? ) Finance pages: &#8220;Total Revenue&#8221; and &#8220;Net Income&#8221;.</p>
<hr />
<h3>Total Employees</h3>
<p><a href="https://finance.yahoo.com/quote/TWTR/profile?p=TWTR">Twitter</a>: 3,400<br />
<a href="https://finance.yahoo.com/quote/NFLX/profile?p=NFLX">Netflix</a>: 4,800<br />
<a href="https://finance.yahoo.com/quote/FB/profile?p=FB">Facebook</a>: 27,742<br />
<a href="https://finance.yahoo.com/quote/GOOG/profile?p=GOOG">Google</a>: 80,110<br />
<a href="https://finance.yahoo.com/quote/AAPL/profile?p=AAPL">Apple</a>: 100,000<br />
<a href="https://finance.yahoo.com/quote/MSFT/profile?p=MSFT">Microsoft</a>: 124,000<br />
<a href="https://finance.yahoo.com/quote/AMZN/profile?p=AMZN">Amazon</a>: 566,000</p>
<hr />
<h3>Revenue Per Employee</h3>
<p><a href="https://finance.yahoo.com/quote/AMZN/financials?p=AMZN">Amazon</a>: <strong>$314,250</strong> ( $177,866,000,000 / 566,000 )<br />
<a href="https://finance.yahoo.com/quote/TWTR/financials?p=TWTR">Twitter</a>: <strong>$718,617</strong> ( $2,443,299,000 / 3,400 )<br />
<a href="https://finance.yahoo.com/quote/MSFT/financials?p=MSFT">Microsoft</a>: <strong>$725,403</strong> ( $89,950,000,000 / 124,000 )<br />
<a href="https://finance.yahoo.com/quote/GOOG/financials?p=GOOG">Google</a>: <strong>$1,383,784</strong> ( $110,855,000,000 / 80,110 )<br />
<a href="https://finance.yahoo.com/quote/FB/financials?p=FB">Facebook</a>: <strong>$1,465,395</strong> ( $40,653,000,000 / 27,742 )<br />
<a href="https://finance.yahoo.com/quote/AAPL/financials?p=AAPL">Apple</a>: <strong>$2,292,340</strong> ( $229,234,000,000 / 100,000 )<br />
<a href="https://finance.yahoo.com/quote/NFLX/financials?p=NFLX">Netflix</a>: <strong>$2,435,981</strong> ( $11,692,713,000 / 4,800 )</p>
<hr />
<h3>Profit Per Employee</h3>
<p><a href="https://finance.yahoo.com/quote/TWTR/financials?p=TWTR">Twitter</a>: <strong>-$31,783</strong> ( -$108,063,000 / 3,400 )<br />
<a href="https://finance.yahoo.com/quote/AMZN/financials?p=AMZN">Amazon</a>: <strong>$5,358</strong> ( $3,033,000,000 / 566,000 )<br />
<a href="https://finance.yahoo.com/quote/NFLX/financials?p=NFLX">Netflix</a>: <strong>$116,443</strong> ( $558,929,000 / 4,800 )<br />
<a href="https://finance.yahoo.com/quote/GOOG/financials?p=GOOG">Google</a>: <strong>$158,057</strong> ( $12,662,000,000 / 80,110 )<br />
<a href="https://finance.yahoo.com/quote/MSFT/financials?p=MSFT">Microsoft</a>: <strong>$171,000</strong> ( $21,204,000,000 / 124,000 )<br />
<a href="https://finance.yahoo.com/quote/AAPL/financials?p=AAPL">Apple</a>: <strong>$483,510</strong> ( $48,351,000,000 / 100,000 )<br />
<a href="https://finance.yahoo.com/quote/FB/financials?p=FB">Facebook</a>: <strong>$573,859</strong> ( $15,920,000,000 / 27,742 )</p>
<hr />
<p>Twitter is still loosing money, but it is loosing a lot less than it was before.</p>
<p>I didn&#8217;t realize that Netflix was so low on the number of employees, yet their revenue is in the general ball park of much larger companies.  To the studios it must look like Netflix is over there printing money.  No wonder so many other companies want to start their own streaming content service.</p>
]]></content:encoded>
					
					<wfw:commentRss>/2018/05/22/revenue-and-profit-per-employee/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Hacking Both Ends</title>
		<link>/2015/10/12/hacking-both-ends/</link>
					<comments>/2015/10/12/hacking-both-ends/#comments</comments>
		
		<dc:creator><![CDATA[josephscott]]></dc:creator>
		<pubDate>Mon, 12 Oct 2015 14:57:52 +0000</pubDate>
				<category><![CDATA[Posts]]></category>
		<category><![CDATA[facebook]]></category>
		<category><![CDATA[jpeg]]></category>
		<category><![CDATA[performance]]></category>
		<guid isPermaLink="false">https://josephscott.org/?p=13510</guid>

					<description><![CDATA[When you control the server and client sides of an application you can come up with some impressive performance hacks. Facebook&#8217;s changes to preview photos is a good example of that: There are a few tables within the JPEG header, which accounts for its size. The question then became: Would it be possible to generate [&#8230;]]]></description>
										<content:encoded><![CDATA[<p>When you control the server and client sides of an application you can come up with some impressive performance hacks.  <a href="https://code.facebook.com/posts/991252547593574/the-technology-behind-preview-photos/">Facebook&#8217;s changes to preview photos</a> is a good example of that:</p>
<blockquote><p>
There are a few tables within the JPEG header, which accounts for its size. The question then became: Would it be possible to generate a fixed header that could be stored on client and therefore not need to be transmitted? In that scenario, only the payload would need to be sent, which would make this the winning format. The investigation began.
</p></blockquote>
<p>For some slow cases they were able to improve page load performance by 30 percent.</p>
]]></content:encoded>
					
					<wfw:commentRss>/2015/10/12/hacking-both-ends/feed/</wfw:commentRss>
			<slash:comments>1</slash:comments>
		
		
			</item>
		<item>
		<title>Facebook Cache Efficiency Exercise</title>
		<link>/2015/10/07/facebook-cache-efficiency-exercise/</link>
					<comments>/2015/10/07/facebook-cache-efficiency-exercise/#respond</comments>
		
		<dc:creator><![CDATA[josephscott]]></dc:creator>
		<pubDate>Wed, 07 Oct 2015 21:30:41 +0000</pubDate>
				<category><![CDATA[Posts]]></category>
		<category><![CDATA[cache]]></category>
		<category><![CDATA[facebook]]></category>
		<category><![CDATA[webperf]]></category>
		<guid isPermaLink="false">https://josephscott.org/?p=12176</guid>

					<description><![CDATA[Eight years ago Yahoo reported on the browser cache experience of their users. The results showed more empty cache views than were expected: 40-60% of Yahoo!&#8217;s users have an empty cache experience and ~20% of all page views are done with an empty cache. Earlier this year Facebook recreated that experiment: Web performance: Cache efficiency [&#8230;]]]></description>
										<content:encoded><![CDATA[<p>Eight years ago <a href="http://yuiblog.com/blog/2007/01/04/performance-research-part-2/">Yahoo reported on the browser cache experience of their users.</a>  The results showed more empty cache views than were expected:</p>
<blockquote><p>
40-60% of Yahoo!&#8217;s users have an empty cache experience and ~20% of all page views are done with an empty cache.
</p></blockquote>
<p>Earlier this year Facebook recreated that experiment: <a href='https://code.facebook.com/posts/964122680272229/web-performance-cache-efficiency-exercise/'>Web performance: Cache efficiency exercise</a>.</p>
<p>Here are a few key data points:</p>
<ul>
<li>24.8% of desktop requests and 26.9% of mobile were missing the cached image.</li>
<li>On average, 44.6% of users are getting an empty cache.</li>
<li>Mobile hits shows there is a 50% chance that a request will have a cache that is at most 12 hours old.</li>
<li>There is a 42% chance that any request will have a cache that is, at most, 47 hours old on the desktop.</li>
</ul>
<blockquote><p>
Overall our cache hit rate looks like it has improved since 2007. If we ignore Firefox v32 and newer (where we cannot log some cache hits), then the cache hit rate goes to 84.1%, up from about 80% in 2007. On the other hand, caches don’t stay populated for very long.
</p></blockquote>
<p>The bottom line: setting proper cache headers is good, but it doesn&#8217;t guarantee that browsers hitting your site will still have that content in their cache.</p>
]]></content:encoded>
					
					<wfw:commentRss>/2015/10/07/facebook-cache-efficiency-exercise/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Seriously, PHP</title>
		<link>/2015/09/14/seriously-php/</link>
					<comments>/2015/09/14/seriously-php/#respond</comments>
		
		<dc:creator><![CDATA[josephscott]]></dc:creator>
		<pubDate>Mon, 14 Sep 2015 14:30:25 +0000</pubDate>
				<category><![CDATA[Posts]]></category>
		<category><![CDATA[facebook]]></category>
		<category><![CDATA[keith-adams]]></category>
		<category><![CDATA[PHP]]></category>
		<guid isPermaLink="false">https://josephscott.org/?p=12400</guid>

					<description><![CDATA[Taking PHP Seriously ( from two years ago ): Keith Adams outlines PHP&#8217;s strengths and Facebook&#8217;s attempts at remedying the inconsistencies and misfeatures in the core language.]]></description>
										<content:encoded><![CDATA[<p><a href="http://www.infoq.com/presentations/php-history">Taking PHP Seriously</a> ( from two years ago ):</p>
<blockquote><p>
Keith Adams outlines PHP&#8217;s strengths and Facebook&#8217;s attempts at remedying the inconsistencies and misfeatures in the core language.
</p></blockquote>
]]></content:encoded>
					
					<wfw:commentRss>/2015/09/14/seriously-php/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Custom SPDY at Facebook</title>
		<link>/2015/02/17/custom-spdy-at-facebook/</link>
					<comments>/2015/02/17/custom-spdy-at-facebook/#respond</comments>
		
		<dc:creator><![CDATA[josephscott]]></dc:creator>
		<pubDate>Tue, 17 Feb 2015 18:18:12 +0000</pubDate>
				<category><![CDATA[Posts]]></category>
		<category><![CDATA[facebook]]></category>
		<category><![CDATA[http2]]></category>
		<category><![CDATA[spdy]]></category>
		<guid isPermaLink="false">https://josephscott.org/?p=11616</guid>

					<description><![CDATA[With the Chrome browser already making plans to retire SPDY in favor of HTTP/2 I started testing sites to see how many of them advertised support for HTTP/2. No surprise that Google does: $ openssl s_client -connect google.com:443 -nextprotoneg &#8221; CONNECTED(00000003) Protocols advertised by server: h2-15, h2-14, spdy/3.1, spdy/3, http/1.1 The h2-15 and h2-14 refer [&#8230;]]]></description>
										<content:encoded><![CDATA[<p>With <a href="http://blog.chromium.org/2015/02/hello-http2-goodbye-spdy-http-is_9.html">the Chrome browser already making plans to retire SPDY in favor of HTTP/2</a> I started testing sites to see how many of them <a href="https://josephscott.org/archives/2014/12/how-to-check-a-site-for-spdy-support-with-openssl/">advertised support for HTTP/2</a>.  No surprise that Google does:</p>
<blockquote><p>
$ openssl s_client -connect google.com:443 -nextprotoneg &#8221;<br />
CONNECTED(00000003)<br />
Protocols advertised by server: <strong>h2-15, h2-14, spdy/3.1, spdy/3, http/1.1</strong>
</p></blockquote>
<p>The <code>h2-15</code> and <code>h2-14</code> refer to the HTTP/2 draft version ( <a href="https://tools.ietf.org/html/draft-ietf-httpbis-http2-14">14</a> and <a href="https://tools.ietf.org/html/draft-ietf-httpbis-http2-15">15</a> in this case, draft <a href="https://tools.ietf.org/html/draft-ietf-httpbis-http2-17">17</a> was published last week ).</p>
<p>The response I got from Facebook turned up something interesting:</p>
<blockquote><p>
$ openssl s_client -connect facebook.com:443 -nextprotoneg &#8221;<br />
CONNECTED(00000003)<br />
Protocols advertised by server: <strong>spdy/3.1-fb-0.5</strong>, spdy/3.1, spdy/3, http/1.1
</p></blockquote>
<p>I don&#8217;t recall seeing <code>spdy/3.1-fb-0.5</code> before.  It comes from the <a href="https://github.com/facebook/proxygen/blob/master/proxygen/lib/http/codec/compress/HPACKCodec.cpp#L27">Facebook proxygen HTTP library</a>.</p>
<p><a href="https://code.google.com/p/chromium/codesearch#chromium/src/net/socket/ssl_client_socket.cc&#038;q=spdy/3.1&#038;sq=package:chromium&#038;l=31&#038;dr=C">Chrome doesn&#8217;t check for this version of SPDY</a>, I&#8217;m assuming no other regular browsers do either.  My guess is the only clients that support this are Facebook mobile apps.</p>
]]></content:encoded>
					
					<wfw:commentRss>/2015/02/17/custom-spdy-at-facebook/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Facebook JavaScript Console Warning</title>
		<link>/2014/10/27/facebook-javascript-console-warning/</link>
					<comments>/2014/10/27/facebook-javascript-console-warning/#comments</comments>
		
		<dc:creator><![CDATA[josephscott]]></dc:creator>
		<pubDate>Mon, 27 Oct 2014 19:14:41 +0000</pubDate>
				<category><![CDATA[Posts]]></category>
		<category><![CDATA[facebook]]></category>
		<guid isPermaLink="false">https://josephscott.org/?p=11333</guid>

					<description><![CDATA[Stop! This is a browser feature intended for developers. If someone told you to copy-paste something here to enable a Facebook feature or &#8220;hack&#8221; someone&#8217;s account, it is a scam and will give them access to your Facebook account. For more information, see https://www.facebook.com/selfxss.]]></description>
										<content:encoded><![CDATA[<p><a href="/wp-content/uploads/2014/10/facebook-console-1.png"><img loading="lazy" src="/wp-content/uploads/2014/10/facebook-console-1-1024x350.png" alt="facebook-console" width="676" height="231" class="aligncenter size-large wp-image-11334" srcset="/wp-content/uploads/2014/10/facebook-console-1-1024x350.png 1024w, /wp-content/uploads/2014/10/facebook-console-1-300x103.png 300w, /wp-content/uploads/2014/10/facebook-console-1-768x263.png 768w, /wp-content/uploads/2014/10/facebook-console-1-1200x410.png 1200w, /wp-content/uploads/2014/10/facebook-console-1.png 1424w" sizes="(max-width: 676px) 100vw, 676px" /></a></p>
<blockquote><p>
Stop!</p>
<p>This is a browser feature intended for developers. If someone told you to copy-paste something here to enable a Facebook feature or &#8220;hack&#8221; someone&#8217;s account, it is a scam and will give them access to your Facebook account.</p>
<p>For more information, see https://www.facebook.com/selfxss.
</p></blockquote>
]]></content:encoded>
					
					<wfw:commentRss>/2014/10/27/facebook-javascript-console-warning/feed/</wfw:commentRss>
			<slash:comments>4</slash:comments>
		
		
			</item>
		<item>
		<title>Facebook Wants To Improve The Linux Network Stack</title>
		<link>/2014/10/01/facebook-wants-to-improve-the-linux-network-stack/</link>
					<comments>/2014/10/01/facebook-wants-to-improve-the-linux-network-stack/#respond</comments>
		
		<dc:creator><![CDATA[josephscott]]></dc:creator>
		<pubDate>Wed, 01 Oct 2014 15:01:50 +0000</pubDate>
				<category><![CDATA[Posts]]></category>
		<category><![CDATA[facebook]]></category>
		<category><![CDATA[FreeBSD]]></category>
		<category><![CDATA[Linux]]></category>
		<category><![CDATA[whatsapp]]></category>
		<guid isPermaLink="false">https://josephscott.org/?p=10970</guid>

					<description><![CDATA[Facebook has a job posting for a &#8216;Linux Kernel Software Engineer&#8217; ( emphasis mine ): Facebook is seeking a Linux Kernel Software Engineer to join our Kernel team, with a primary focus on the networking subsystem. Our goal over the next few years is for the Linux kernel network stack to rival or exceed that [&#8230;]]]></description>
										<content:encoded><![CDATA[<p>Facebook has a <a href="https://www.facebook.com/careers/department?req=a0IA000000Cz53VMAR">job posting for a &#8216;Linux Kernel Software Engineer&#8217;</a> ( emphasis mine ):</p>
<blockquote><p>
Facebook is seeking a Linux Kernel Software Engineer to join our Kernel team, with a primary focus on the networking subsystem. <strong>Our goal over the next few years is for the Linux kernel network stack to rival or exceed that of FreeBSD.</strong>
</p></blockquote>
<p>Why the comparison with FreeBSD?  I suspect it comes from their $19 billion purchase of WhatsApp.  They were claiming <a href="http://blog.whatsapp.com/196/1-million-is-so-2011">2 million established TCP connections on a single FreeBSD server</a> back in 2012:</p>
<blockquote><p>
Today we have an update for those keeping score at home: we are now able to easily push our systems to over 2 million tcp connections!</p>
<p>&#8230;</p>
<p>Best part is that we are able to do it with plenty of CPU and memory to spare and do it sustainably
</p></blockquote>
<p>The post describes a few details of their FreeBSD ( and Erlang ) setup.</p>
<p>I&#8217;m sure that Facebook would like to consolidate servers to a single operating system.  It sounds like they can&#8217;t do that until Linux can handle a similar load ( with a similar performance profile ).</p>
]]></content:encoded>
					
					<wfw:commentRss>/2014/10/01/facebook-wants-to-improve-the-linux-network-stack/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Facebook Atlas Ad Network</title>
		<link>/2014/09/30/facebook-atlas-ad-network/</link>
					<comments>/2014/09/30/facebook-atlas-ad-network/#respond</comments>
		
		<dc:creator><![CDATA[josephscott]]></dc:creator>
		<pubDate>Tue, 30 Sep 2014 15:10:54 +0000</pubDate>
				<category><![CDATA[Posts]]></category>
		<category><![CDATA[ads]]></category>
		<category><![CDATA[facebook]]></category>
		<guid isPermaLink="false">https://josephscott.org/?p=11120</guid>

					<description><![CDATA[Four years ago I was wondering when Facebook would get more aggressive with their ad network. It seemed pretty clear that at some point they&#8217;d move from selling ads only for Facebook properties and move to the broader web ( and apps ). It looks like that time has come: Facebook’s long-awaited Google AdSense competitor [&#8230;]]]></description>
										<content:encoded><![CDATA[<p>Four years ago I was wondering <a href="https://josephscott.org/archives/2010/05/facebook-future/">when Facebook would get more aggressive with their ad network</a>.  It seemed pretty clear that at some point they&#8217;d move from selling ads only for Facebook properties and move to the broader web ( and apps ).  It looks like that time has come:</p>
<blockquote><p>
Facebook’s long-awaited Google AdSense competitor is finally here. It’s called Atlas, and it will allow brands to use the social network’s massive trove of data to target ads on sites across the web.
</p></blockquote>
<p>From <a href="http://www.wired.com/2014/09/facebook-launches-atlas/">Wired: Facebook Ads Will Now Follow You No Matter What Device You’re Using</a>.</p>
<p>In the era of iOS and Android the new holy grail of ads is following people around on every device they use.  Queue the &#8216;with great power comes great responsibility&#8217; requirements.</p>
<p>Once this is starts getting traction I expect to see people researching how to keep Facebook tracking localized at the device level.</p>
]]></content:encoded>
					
					<wfw:commentRss>/2014/09/30/facebook-atlas-ad-network/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Is Facebook Planning a Move to ARM Based Servers?</title>
		<link>/2013/12/13/is-facebook-planning-a-move-to-arm-based-servers/</link>
					<comments>/2013/12/13/is-facebook-planning-a-move-to-arm-based-servers/#respond</comments>
		
		<dc:creator><![CDATA[josephscott]]></dc:creator>
		<pubDate>Fri, 13 Dec 2013 16:36:35 +0000</pubDate>
				<category><![CDATA[Posts]]></category>
		<category><![CDATA[amd]]></category>
		<category><![CDATA[arm-cpu]]></category>
		<category><![CDATA[facebook]]></category>
		<category><![CDATA[hhvm]]></category>
		<category><![CDATA[PHP]]></category>
		<guid isPermaLink="false">https://josephscott.org/?p=9594</guid>

					<description><![CDATA[Update: Hacker News user tdmackey pointed out that Facebook has a job opening for a &#8220;Software Engineer, ARM Server&#8220;, with a specific goal in mind: We aim to evaluate further improving the efficiency of our web tier by porting HipHopVM to new server hardware platforms based on power-efficient ARM. It isn&#8217;t clear if they&#8217;ll end [&#8230;]]]></description>
										<content:encoded><![CDATA[<p><strong>Update:</strong> Hacker News user <a href="https://news.ycombinator.com/item?id=6902300" title="HN threads can be really helpful sometimes.">tdmackey pointed out</a> that Facebook has a job opening for a &#8220;<a href="https://www.facebook.com/careers/department?dept=engineering&#038;req=a0IA0000006cPTMMA2" title="Not exactly a secret">Software Engineer, ARM Server</a>&#8220;, with a specific goal in mind:</p>
<blockquote><p>
We aim to evaluate further improving the efficiency of our web tier by porting HipHopVM to new server hardware platforms based on power-efficient ARM.
</p></blockquote>
<p>It isn&#8217;t clear if they&#8217;ll end up deploying a large number of ARM servers to production, but they are definitely looking to take them out for a test drive.</p>
<hr />
<p>The <a href="http://www.hhvm.com/blog/2027/faster-and-cheaper-the-evolution-of-the-hhvm-jit" title="How long until HHVM is compatible with standard PHP">latest update from Facebook about the HHVM JIT</a> ended with this interesting note, emphasis mine:</p>
<blockquote><p>
It’s also been crucial in <strong>our efforts to get hhvm running on ARM processors</strong> by isolating and reducing the amount of architecture-specific code we need to reimplement. Watch for an upcoming post devoted to our ARM port for more details!
</p></blockquote>
<p>Why the big push to get HHVM ( the PHP Hip Hop Virtual Machine ) running on ARM CPUs?  That seems to imply at least a desire to test out ARM based servers in Facebook data centers.</p>
<p>I went through two posts from <a href="http://perspectives.mvdirona.com/" title="If you are into data center issues go read his site.">James Hamilton</a> &#8211; <a href="http://perspectives.mvdirona.com/2012/01/02/ARMV8Architecture.aspx" title="'Up to 128 cores', wow!">ARM V8 Architecture</a> and <a href="http://perspectives.mvdirona.com/2012/10/29/AMDAnnouncesServerTargetedARMPart.aspx" title="It is good for Intel to have some competition.">AMD Announces Server Targeted ARM</a>, to catch up on ARM server expectations.  Using ARM CPUs in data center servers may very well be the future.  The AMD ARM server announced in October 2012 was expected to be:</p>
<blockquote><p>
This will be 4-core, 64 bit, more than 2Ghz part that is expected to sample in 2013 and ship in volume in early 2014.
</p></blockquote>
<p>The latest news from AMD I could find on this was from a <a href="http://www.amd.com/us/press-releases/Pages/amd-details-embedded-2013sept9.aspx" title="9/9 is a nice symmetrical date." >September 2013 press release</a>:</p>
<blockquote><p>
“Hierofalcon” is the first 64-bit ARM-based platform from AMD targeting embedded data center applications, communications infrastructure and industrial solutions. It will include up to eight ARM Cortex<img src="https://s.w.org/images/core/emoji/13.0.1/72x72/2122.png" alt="™" class="wp-smiley" style="height: 1em; max-height: 1em;" />-A57 CPUs expected to run up to 2.0 GHz, and provides high-performance memory with two 64-bit DDR3/4 channels with error correction code (ECC) for high reliability applications. The highly integrated SoC includes 10 Gb KR Ethernet and PCI-Express Gen 3 for high-speed network connectivity, making it ideal for control plane applications. The “Hierofalcon” series also provides enhanced security with support for ARM TrustZone® technology and a dedicated cryptographic security co-processor, aligning to the increased need for networked, secure systems. “Hierofalcon” is expected to be sampling in the second quarter of 2014 with production in the second half of the year.
</p></blockquote>
<p>Instead of &#8220;more than 2Ghz&#8221; we are looking at &#8220;up to 2Ghz&#8221; and the schedule has been pushed back.  That said the over all trajectory appears to be the same.  Enough of the right features will be in place for an ARM server to be a potentially viable option.</p>
<p>If Facebook isn&#8217;t already testing ARM servers I expect that they will be during 2014.</p>
]]></content:encoded>
					
					<wfw:commentRss>/2013/12/13/is-facebook-planning-a-move-to-arm-based-servers/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Serious PHP at Facebook</title>
		<link>/2013/10/07/serious-php-at-facebook/</link>
					<comments>/2013/10/07/serious-php-at-facebook/#respond</comments>
		
		<dc:creator><![CDATA[josephscott]]></dc:creator>
		<pubDate>Mon, 07 Oct 2013 15:29:50 +0000</pubDate>
				<category><![CDATA[Posts]]></category>
		<category><![CDATA[facebook]]></category>
		<category><![CDATA[PHP]]></category>
		<guid isPermaLink="false">https://josephscott.org/?p=9114</guid>

					<description><![CDATA[Keith Adams from his Strange Loop 2013 presentation on Taking PHP Seriously: Typical FB requests spend 10ms initializing That was on the slide about state in PHP. If it only takes Facebook 10ms to initialize the state on each PHP request I&#8217;d call that pretty good. I suspect that number is while using HHVM.]]></description>
										<content:encoded><![CDATA[<p>Keith Adams from his Strange Loop 2013 presentation on <a href="https://github.com/strangeloop/StrangeLoop2013/blob/master/slides/sessions/Adams-TakingPHPSeriously.pdf?raw=true">Taking PHP Seriously</a>:</p>
<blockquote><p>
Typical FB requests spend 10ms initializing
</p></blockquote>
<p>That was on the slide about state in PHP.  If it only takes Facebook 10ms to initialize the state on each PHP request I&#8217;d call that pretty good.  I suspect that number is while using <a href="http://www.hiphop-php.com/blog/">HHVM</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>/2013/10/07/serious-php-at-facebook/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
	</channel>
</rss>
