<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>ios &#8211; Joseph Scott</title>
	<atom:link href="/tag/ios/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description></description>
	<lastBuildDate>Tue, 26 Feb 2019 22:35:50 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.7.2</generator>
	<atom:link rel='hub' href='/?pushpress=hub'/>
	<item>
		<title>iOS Messages Feature Request</title>
		<link>/2019/02/26/ios-messages-feature-request/</link>
					<comments>/2019/02/26/ios-messages-feature-request/#comments</comments>
		
		<dc:creator><![CDATA[josephscott]]></dc:creator>
		<pubDate>Tue, 26 Feb 2019 22:35:50 +0000</pubDate>
				<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[ios]]></category>
		<guid isPermaLink="false">/?p=17359</guid>

					<description><![CDATA[The email inbox is something of a make shift to-do list. It is an easy way to process items in one of three ways: &#8211; DONE: Reply and archive &#8211; DONE: Immediate archive or delete &#8211; TODO: Leave it in the inbox for later follow up Now we have text messages that are coming in [&#8230;]]]></description>
										<content:encoded><![CDATA[<p>The email inbox is something of a make shift to-do list.  It is an easy way to process items in one of three ways:</p>
<p>&#8211; DONE: Reply and archive<br />
&#8211; DONE: Immediate archive or delete<br />
&#8211; TODO: Leave it in the inbox for later follow up</p>
<p>Now we have text messages that are coming in with the same sort of management needs.  Because of that, I&#8217;d like to see this feature in <a href="https://www.apple.com/ios/">iOS</a>:</p>
<blockquote><p>
The ability to select an individual message in <a href="https://support.apple.com/explore/messages">iOS messages</a> and mark it as &#8220;unread&#8221;.</p>
<p>Bonus feature on top of that would be a &#8220;remind me later&#8221; option where I would get a notification after a selectable number minutes/hours/days later.</p>
<p>Bonus bonus feature would be the ability to do <a href="https://developer.apple.com/design/human-interface-guidelines/ios/extensions/sharing-and-actions/">sharing and actions</a> on an individual message.  Then I could easy push that message that I need to do something about later to Todoist or other todo list apps.
</p></blockquote>
<p>The first two would be enough to dramatically improve dealing with text messages, but that third one is the real winner.</p>
]]></content:encoded>
					
					<wfw:commentRss>/2019/02/26/ios-messages-feature-request/feed/</wfw:commentRss>
			<slash:comments>2</slash:comments>
		
		
			</item>
		<item>
		<title>iOS Tapping</title>
		<link>/2016/01/11/ios-tapping/</link>
					<comments>/2016/01/11/ios-tapping/#respond</comments>
		
		<dc:creator><![CDATA[josephscott]]></dc:creator>
		<pubDate>Mon, 11 Jan 2016 17:52:14 +0000</pubDate>
				<category><![CDATA[Posts]]></category>
		<category><![CDATA[ios]]></category>
		<category><![CDATA[safari]]></category>
		<guid isPermaLink="false">https://josephscott.org/?p=14608</guid>

					<description><![CDATA[WebKit is changing tap timing, from More Responsive Tapping on iOS: We know that responsive tapping is really important to web developers — so much so that many are willing to employ JavaScript frameworks to avoid the delay using touch handlers. Instead of waiting for WebKit to fire a click after a delay, these libraries [&#8230;]]]></description>
										<content:encoded><![CDATA[<p>WebKit is changing tap timing, from <a href="https://webkit.org/blog/5610/more-responsive-tapping-on-ios/">More Responsive Tapping on iOS</a>:</p>
<blockquote><p>
We know that responsive tapping is really important to web developers — so much so that many are willing to employ JavaScript frameworks to avoid the delay using touch handlers. Instead of waiting for WebKit to fire a click after a delay, these libraries prevent the default behavior of the touchend event and call click() immediately so that the element is clicked the moment the user stops touching the element. While this may make a link feel fast, it can also reduce responsiveness in other ways, including page load time and scrolling. To address this, we baked fast tapping optimizations into WebKit so well-scaled mobile web pages will be able to achieve responsive tapping out of the box without the drawbacks of third-party frameworks.
</p></blockquote>
<p>I&#8217;m looking forward to removing one more piece of JavaScript that only existed to work around suboptimal browser behavior.</p>
<p>Unfortunately there is still a fair bit of waiting involved.  First, the next version of mobile Safari, which means iOS 10.  Based on previous schedules that should happen during 2016.  Then we need come up with work arounds for the still fairly large number of iPhones that won&#8217;t be able to upgrade to iOS 10.</p>
<p>Add &#8216;de-couple mobile Safari from iOS releases&#8217; to my iOS 10 wish list.</p>
]]></content:encoded>
					
					<wfw:commentRss>/2016/01/11/ios-tapping/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>iOS Remote Virtual Interface</title>
		<link>/2015/07/30/ios-remote-virtual-interface/</link>
					<comments>/2015/07/30/ios-remote-virtual-interface/#respond</comments>
		
		<dc:creator><![CDATA[josephscott]]></dc:creator>
		<pubDate>Thu, 30 Jul 2015 14:01:16 +0000</pubDate>
				<category><![CDATA[Posts]]></category>
		<category><![CDATA[ios]]></category>
		<category><![CDATA[tcpdump]]></category>
		<guid isPermaLink="false">https://josephscott.org/?p=10733</guid>

					<description><![CDATA[Capturing packets on iOS devices using remote virtual interface: iOS 5 added a remote virtual interface (RVI) facility that lets you use OS X packet trace programs to capture traces from an iOS device. The basic strategy is: &#8211; Connect your iOS device to your Mac via USB. &#8211; Set up an RVI for that [&#8230;]]]></description>
										<content:encoded><![CDATA[<p>Capturing packets on iOS devices using <a href="https://developer.apple.com/library/ios/qa/qa1176/_index.html#//apple_ref/doc/uid/DTS10001707-CH1-SECRVI">remote virtual interface</a>:</p>
<blockquote><p>
iOS 5 added a remote virtual interface (RVI) facility that lets you use OS X packet trace programs to capture traces from an iOS device. The basic strategy is:</p>
<p>&#8211; Connect your iOS device to your Mac via USB.<br />
&#8211; Set up an RVI for that device. This creates a virtual network interface on your Mac that represents the iOS device&#8217;s networking stack.<br />
&#8211; Run your OS X packet trace program, and point it at the RVI created in the previous step.
</p></blockquote>
<p>I tried this out, hardest part was looking up the UDID for my phone again.</p>
]]></content:encoded>
					
					<wfw:commentRss>/2015/07/30/ios-remote-virtual-interface/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Safari Minimal UI</title>
		<link>/2014/04/03/ios-7-1-mobile-safari-minimal-ui-perpetual-beta/</link>
					<comments>/2014/04/03/ios-7-1-mobile-safari-minimal-ui-perpetual-beta/#respond</comments>
		
		<dc:creator><![CDATA[josephscott]]></dc:creator>
		<pubDate>Thu, 03 Apr 2014 02:35:16 +0000</pubDate>
				<category><![CDATA[Posts]]></category>
		<category><![CDATA[ios]]></category>
		<category><![CDATA[safari]]></category>
		<guid isPermaLink="false">https://josephscott.org/?p=10056</guid>

					<description><![CDATA[iOS 7.1 added a new minimal-ui option to the viewport setting of Safari: Put simply, the minimal-ui property allows you to display your responsive web page without the browser chrome taking up valuable screen real-estate. &#8211; via Jonathan Hollin This is a nice option, but as with all nifty features it will be abused in [&#8230;]]]></description>
										<content:encoded><![CDATA[<p>iOS 7.1 added a new <code>minimal-ui</code> option to the <code>viewport</code> setting of Safari:</p>
<blockquote><p>
Put simply, the minimal-ui property allows you to display your responsive web page without the browser chrome taking up valuable screen real-estate.
</p></blockquote>
<p>&#8211; <a href="http://darkblue.sdf.org/weblog/ios-7-dot-1-mobile-safari-minimal-ui.html" title="'Perptual Beta', that should be the sub-title for every web site.">via Jonathan Hollin</a></p>
<p>This is a nice option, but as with all nifty features it will be abused in horrible ways by some and brilliant ways by others.</p>
]]></content:encoded>
					
					<wfw:commentRss>/2014/04/03/ios-7-1-mobile-safari-minimal-ui-perpetual-beta/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>iOS 7.1 Shift Key Confusion</title>
		<link>/2014/03/13/ios-71-shift-key-confusion/</link>
					<comments>/2014/03/13/ios-71-shift-key-confusion/#respond</comments>
		
		<dc:creator><![CDATA[josephscott]]></dc:creator>
		<pubDate>Thu, 13 Mar 2014 18:34:28 +0000</pubDate>
				<category><![CDATA[Posts]]></category>
		<category><![CDATA[confused]]></category>
		<category><![CDATA[ios]]></category>
		<category><![CDATA[shift-key]]></category>
		<guid isPermaLink="false">https://josephscott.org/?p=10016</guid>

					<description><![CDATA[From &#8220;Is My Shift Key On or Not.com&#8220;. Glad I&#8217;m not the only one who was confused by the new shift key in iOS 7.1.]]></description>
										<content:encoded><![CDATA[<p><a href="/wp-content/uploads/2014/03/ios7-shift-key-1.jpg"><img loading="lazy" src="/wp-content/uploads/2014/03/ios7-shift-key-1.jpg" alt="ios7-shift-key" width="538" height="387" class="aligncenter size-full wp-image-10019" srcset="/wp-content/uploads/2014/03/ios7-shift-key-1.jpg 538w, /wp-content/uploads/2014/03/ios7-shift-key-1-300x216.jpg 300w" sizes="(max-width: 538px) 100vw, 538px" /></a></p>
<p>From &#8220;<a href='http://ismyshiftkeyonornot.com/' title="From the single use domain department.">Is My Shift Key On or Not.com</a>&#8220;.</p>
<p>Glad I&#8217;m not the only one who was confused by the new shift key in iOS 7.1.</p>
]]></content:encoded>
					
					<wfw:commentRss>/2014/03/13/ios-71-shift-key-confusion/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>2013 Apps, Android vs. iOS</title>
		<link>/2014/01/03/2013-apps-android-vs-ios/</link>
					<comments>/2014/01/03/2013-apps-android-vs-ios/#respond</comments>
		
		<dc:creator><![CDATA[josephscott]]></dc:creator>
		<pubDate>Fri, 03 Jan 2014 18:54:04 +0000</pubDate>
				<category><![CDATA[Posts]]></category>
		<category><![CDATA[android]]></category>
		<category><![CDATA[ios]]></category>
		<category><![CDATA[techcrunch]]></category>
		<guid isPermaLink="false">https://josephscott.org/?p=9735</guid>

					<description><![CDATA[TechCrunch ran a Best iOS And Android Apps Of 2013 article this week. I thought the platform break down was interesting: iOS only: 9 ( Seene, QuizUp, Cycloramic, BillGuard, Oyster, HeyDay, TimeHop, Clumsy Ninja, Sunrise ) iOS &#038; Android: 5 ( Newsblur, Tinder, Digg, Duolingo, Vine ) Android only: 2 ( Cover, Agent ) It [&#8230;]]]></description>
										<content:encoded><![CDATA[<p>TechCrunch ran a <a href="http://techcrunch.com/2013/12/31/the-best-ios-and-android-apps-of-2013/" title="For some definition of 'best'.">Best iOS And Android Apps Of 2013</a> article this week.  I thought the platform break down was interesting:</p>
<ul>
<li><strong>iOS only:</strong> 9 ( Seene, QuizUp, Cycloramic, BillGuard, Oyster, HeyDay, TimeHop, Clumsy Ninja, Sunrise )</li>
<li><strong>iOS &#038; Android:</strong> 5 ( Newsblur, Tinder, Digg, Duolingo, Vine )</li>
<li><strong>Android only:</strong> 2 ( Cover, Agent )</li>
</ul>
<p>It looks like we are still in a holding pattern for the long predicted &#8220;Android first&#8221; tidal wave.  Instead, the Android only apps tend to focus on things that aren&#8217;t allowed on the iOS platform.  Everyone else either targets only iOS, or iOS and Android together.  </p>
<p>I don&#8217;t see anything in the short term that is likely to significantly change that pattern.</p>
<p>This is only one best of list, for one year, so my sample size is rather small ( to put it mildly ).  Take this with a sufficiently large grain of salt.</p>
]]></content:encoded>
					
					<wfw:commentRss>/2014/01/03/2013-apps-android-vs-ios/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Sandy, Utah Mobile App for iOS</title>
		<link>/2013/10/15/sandy-utah-mobile-app-for-ios/</link>
					<comments>/2013/10/15/sandy-utah-mobile-app-for-ios/#respond</comments>
		
		<dc:creator><![CDATA[josephscott]]></dc:creator>
		<pubDate>Tue, 15 Oct 2013 15:47:58 +0000</pubDate>
				<category><![CDATA[Posts]]></category>
		<category><![CDATA[ios]]></category>
		<category><![CDATA[sandy-utah]]></category>
		<guid isPermaLink="false">https://josephscott.org/?p=9065</guid>

					<description><![CDATA[The city of Sandy, Utah has a mobile app for iOS devices. I tried it out for a few minutes this morning. The app itself is ok, though doesn&#8217;t really look like an iOS app. I suspect it was built with one of the multiplatform SDKs out there. One of the features in the app [&#8230;]]]></description>
										<content:encoded><![CDATA[<p><a href="/wp-content/uploads/2013/10/sandy-city-ios-app-1.png"><img loading="lazy" src="/wp-content/uploads/2013/10/sandy-city-ios-app-1.png" alt="sandy-city-ios-app" width="320" height="480" class="alignleft size-full wp-image-9184" srcset="/wp-content/uploads/2013/10/sandy-city-ios-app-1.png 320w, /wp-content/uploads/2013/10/sandy-city-ios-app-1-200x300.png 200w" sizes="(max-width: 320px) 100vw, 320px" /></a></p>
<p>The city of <a href="http://sandy.utah.gov/mobile/support/ios.html">Sandy, Utah has a mobile app for iOS devices</a>.  I tried it out for a few minutes this morning.  The app itself is ok, though doesn&#8217;t really look like an iOS app.  I suspect it was built with one of the multiplatform SDKs out there.</p>
<p>One of the features in the app was to report a problem.  I have a cross walk signal at a major intersection near my house that doesn&#8217;t work properly, so I used the app to report that.  The process wasn&#8217;t as smooth as it could have been, but was certainly usable.  The ultimate proof is if I hear anything back about it actually getting fixed though.</p>
<p>There are several things that could be done to improve this app, but they aren&#8217;t big enough to ruin the overall usefulness of the app.  This is a good first version of the app and for something that came out of a city government I&#8217;d call it really good.</p>
]]></content:encoded>
					
					<wfw:commentRss>/2013/10/15/sandy-utah-mobile-app-for-ios/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>What Really Went Over The Wire?</title>
		<link>/2013/04/22/what-really-went-over-the-wire/</link>
					<comments>/2013/04/22/what-really-went-over-the-wire/#respond</comments>
		
		<dc:creator><![CDATA[josephscott]]></dc:creator>
		<pubDate>Mon, 22 Apr 2013 16:14:08 +0000</pubDate>
				<category><![CDATA[Posts]]></category>
		<category><![CDATA[ios]]></category>
		<category><![CDATA[steve-souders]]></category>
		<category><![CDATA[tcpdump]]></category>
		<guid isPermaLink="false">https://josephscott.org/?p=7546</guid>

					<description><![CDATA[The point is, some days you have to drop down into tcpdump and pcap files to get the truth. &#8211; Steve Souders while tracking down how much HTML5 video data iOS actually receives. Turns out server logs were giving an incorrect picture of the amount of data that was being transmitted. It took watching individual [&#8230;]]]></description>
										<content:encoded><![CDATA[<blockquote><p>
The point is, some days you have to drop down into tcpdump and pcap files to get the truth.
</p></blockquote>
<p>&#8211; Steve Souders while tracking down <a href="http://www.stevesouders.com/blog/2013/04/21/html5-video-bytes-on-ios/">how much HTML5 video data iOS actually receives</a>.</p>
<p>Turns out server logs were giving an incorrect picture of the amount of data that was being transmitted.  It took watching individual packets to track down what was really happening.  Go read the post for the odd twist at the end.</p>
<p>Reading this reminded me of <a href="http://josephscott.org/archives/2009/08/xmlhttprequest-xhr-uses-multiple-packets-for-http-post/">using Wireshark to track down multiple packet issues in HTTP POST requests from XMLHttpRequest</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>/2013/04/22/what-really-went-over-the-wire/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>OpenVBX</title>
		<link>/2013/02/28/openvbx/</link>
					<comments>/2013/02/28/openvbx/#comments</comments>
		
		<dc:creator><![CDATA[josephscott]]></dc:creator>
		<pubDate>Thu, 28 Feb 2013 22:12:52 +0000</pubDate>
				<category><![CDATA[Posts]]></category>
		<category><![CDATA[ios]]></category>
		<category><![CDATA[openvbx]]></category>
		<category><![CDATA[PHP]]></category>
		<category><![CDATA[twilio]]></category>
		<guid isPermaLink="false">https://josephscott.org/?p=6426</guid>

					<description><![CDATA[While playing around with Twilio I stumbled across OpenVBX, which is an open source (MPL) virtual telephone exchange that leverages the Twilio API to provide phone services. It runs on a standard LAMP stack; MySQL 5+, PHP 5.2+ and Apache/Nginx. Twilio having awesome APIs is nice to see, having an open source VBX that anyone [&#8230;]]]></description>
										<content:encoded><![CDATA[<p><a href="https://sharedat.net/s/eCCR"><img loading="lazy" src="https://sharedat.net/f/eC/eCCR/openvbx-iphone.png" width="367" height="663" class="alignleft" /></a></p>
<p>While playing around with <a href="http://www.twilio.com/">Twilio</a> I stumbled across <a href='http://www.openvbx.org/'>OpenVBX</a>, which is an open source (<a href="http://www.openvbx.org/license/">MPL</a>) virtual telephone exchange that leverages the Twilio API to provide phone services.  It runs on a standard LAMP stack; MySQL 5+, PHP 5.2+ and Apache/Nginx.</p>
<p>Twilio having awesome <a href="http://www.twilio.com/docs/api">APIs</a> is nice to see, having an open source VBX that anyone can use to easily manage phone services built on top of Twilio is taking it to the next level.  The UI is usable as it stands, though could use a bit more polish to make it easier for beginners.  Feature wise OpenVBX would probably work just fine for most small to medium size offices, with very little effort.</p>
<p>The source code for OpenVBX is at <a href="https://github.com/twilio/OpenVBX">https://github.com/twilio/OpenVBX</a>, making it easy for anyone to grab a copy and start hacking.  I skimmed through some of the source code and saw that they are using <a href="http://en.gravatar.com/">Gravatar</a> for user images, which is great.</p>
<p>What I&#8217;m really excited to see is the <a href="http://www.openvbx.org/iphone/">OpenVBX iOS app</a>.  I haven&#8217;t tried it yet, so no verdict on how well it is has been executed, but I love the concept.  The source code of the OpenVBX iOS app is available at <a href="https://github.com/twilio/OpenVBX-iPhone">https://github.com/twilio/OpenVBX-iPhone</a>.</p>
<p>Making it possible for an office manager to take care of voice services via a web or mobile app with just a few clicks is totally the future, the sooner we get there the better.</p>
]]></content:encoded>
					
					<wfw:commentRss>/2013/02/28/openvbx/feed/</wfw:commentRss>
			<slash:comments>1</slash:comments>
		
		
			</item>
		<item>
		<title>iOS6 Safari Caching POST Responses</title>
		<link>/2012/09/24/ios6-safari-caching-post-responses/</link>
					<comments>/2012/09/24/ios6-safari-caching-post-responses/#respond</comments>
		
		<dc:creator><![CDATA[josephscott]]></dc:creator>
		<pubDate>Mon, 24 Sep 2012 14:29:28 +0000</pubDate>
				<category><![CDATA[Posts]]></category>
		<category><![CDATA[apple]]></category>
		<category><![CDATA[http]]></category>
		<category><![CDATA[ios]]></category>
		<category><![CDATA[safari]]></category>
		<guid isPermaLink="false">https://josephscott.org/?p=6385</guid>

					<description><![CDATA[With the release of iOS6 mobile Safari started caching POST responses. Mark Nottingham talks through the related RFCs to see how this lines up with the HTTP specs. Worth a read for the details, here is the conclusion: even without the benefit of this context, they&#8217;re still clearly violating the spec; the original permission to [&#8230;]]]></description>
										<content:encoded><![CDATA[<p>With the release of iOS6 mobile Safari started caching POST responses.  <a href="http://www.mnot.net/blog/2012/09/24/caching_POST">Mark Nottingham talks through the related RFCs</a> to see how this lines up with the HTTP specs.  Worth a read for the details, here is the conclusion:</p>
<blockquote><p>
even without the benefit of this context, they&#8217;re still clearly violating the spec; the original permission to cache in 2616 was contingent upon there being explicit freshness information (basically, Expires or Cache-Control: max-age).</p>
<p>So, it&#8217;s a bug. Unfortunately, it&#8217;s one that will make people trust caches even less, which is bad for the Web. Hopefully, they&#8217;ll do a quick fix before developers feel they need to work around this for the next five years.
</p></blockquote>
<p>Over the years I&#8217;ve run across a handful of services and applications that claim to be able to cache HTTP POST responses.  In every case that turned out to be a bad decision.</p>
]]></content:encoded>
					
					<wfw:commentRss>/2012/09/24/ios6-safari-caching-post-responses/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
	</channel>
</rss>
