<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>mongodb &#8211; Joseph Scott</title>
	<atom:link href="/tag/mongodb/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description></description>
	<lastBuildDate>Thu, 01 Oct 2015 15:04:33 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.7.2</generator>
	<atom:link rel='hub' href='/?pushpress=hub'/>
	<item>
		<title>Public MongoDB Data</title>
		<link>/2015/10/01/public-mongodb-data/</link>
					<comments>/2015/10/01/public-mongodb-data/#respond</comments>
		
		<dc:creator><![CDATA[josephscott]]></dc:creator>
		<pubDate>Thu, 01 Oct 2015 15:04:33 +0000</pubDate>
				<category><![CDATA[Posts]]></category>
		<category><![CDATA[mongodb]]></category>
		<category><![CDATA[security]]></category>
		<category><![CDATA[shodan]]></category>
		<guid isPermaLink="false">https://josephscott.org/?p=13305</guid>

					<description><![CDATA[Database authentication, or the lack there of: There&#8217;s a total of 595.2 TB of data exposed on the Internet via publicly accessible MongoDB instances that don&#8217;t have any form of authentication. From Shodan: It&#8217;s the Data, Stupid!]]></description>
										<content:encoded><![CDATA[<p>Database authentication, or the lack there of:</p>
<blockquote><p>
There&#8217;s a total of 595.2 TB of data exposed on the Internet via publicly accessible MongoDB instances that don&#8217;t have any form of authentication.
</p></blockquote>
<p>From Shodan: <a href="http://blog.shodan.io/its-the-data-stupid/">It&#8217;s the Data, Stupid!</a></p>
]]></content:encoded>
					
					<wfw:commentRss>/2015/10/01/public-mongodb-data/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>MongoDB Reads</title>
		<link>/2015/05/11/mongodb-reads/</link>
					<comments>/2015/05/11/mongodb-reads/#respond</comments>
		
		<dc:creator><![CDATA[josephscott]]></dc:creator>
		<pubDate>Mon, 11 May 2015 16:05:53 +0000</pubDate>
				<category><![CDATA[Posts]]></category>
		<category><![CDATA[aphyr]]></category>
		<category><![CDATA[mongodb]]></category>
		<guid isPermaLink="false">https://josephscott.org/?p=12276</guid>

					<description><![CDATA[From aphyr.com &#8220;Call me maybe: MongoDB stale reads&#8220;: In this post, we’ll see that Mongo’s consistency model is broken by design: not only can “strictly consistent” reads see stale versions of documents, but they can also return garbage data from writes that never should have occurred. The former is (as far as I know) a [&#8230;]]]></description>
										<content:encoded><![CDATA[<p>From aphyr.com &#8220;<a href="https://aphyr.com/posts/322-call-me-maybe-mongodb-stale-reads">Call me maybe: MongoDB stale reads</a>&#8220;:</p>
<blockquote><p>In this post, we’ll see that Mongo’s consistency model is broken by design: not only can “strictly consistent” reads see stale versions of documents, but they can also return garbage data from writes that never should have occurred. The former is (as far as I know) a new result which runs contrary to all of Mongo’s consistency documentation. The latter has been a documented issue in Mongo for some time. We’ll also touch on a result from the previous Jepsen post: almost all write concern levels allow data loss.
</p></blockquote>
<p>Another in an amazing line of <a href="https://aphyr.com/tags/Jepsen">Call Me Maybe posts</a> at aphyr.com.</p>
]]></content:encoded>
					
					<wfw:commentRss>/2015/05/11/mongodb-reads/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>TokuDB and MongoDB</title>
		<link>/2013/05/10/tokudb-and-mongodb/</link>
					<comments>/2013/05/10/tokudb-and-mongodb/#respond</comments>
		
		<dc:creator><![CDATA[josephscott]]></dc:creator>
		<pubDate>Fri, 10 May 2013 15:58:02 +0000</pubDate>
				<category><![CDATA[Posts]]></category>
		<category><![CDATA[baron-schwartz]]></category>
		<category><![CDATA[mongodb]]></category>
		<category><![CDATA[MySQL]]></category>
		<category><![CDATA[tokudb]]></category>
		<guid isPermaLink="false">https://josephscott.org/?p=7607</guid>

					<description><![CDATA[Baron Schwartz on TokuDB going open source: I think TokuDB will rapidly become the storage engine of choice for MongoDB, and could catapult MongoDB into the lead in the NoSQL database arena. This would have profound implications for opensource databases of all flavors, not just NoSQL databases. It is easy to forget how long it [&#8230;]]]></description>
										<content:encoded><![CDATA[<p>Baron Schwartz on <a href="http://www.xaprb.com/blog/2013/04/29/what-tokudb-might-mean-for-mongodb/">TokuDB going open source</a>:</p>
<blockquote><p>
I think TokuDB will rapidly become the storage engine of choice for MongoDB, and could catapult MongoDB into the lead in the NoSQL database arena. This would have profound implications for opensource databases of all flavors, not just NoSQL databases.
</p></blockquote>
<p>It is easy to forget how long it took MySQL to get to where it is today ( and it still has plenty of issues ).  When I look at MongoDB I see it going through a similar path to MySQL ( and most other software ) to reach a point of critical features, stability, and mass.  Improving the underlying storage engine, by using an existing open source one, could move it down that path much faster.</p>
]]></content:encoded>
					
					<wfw:commentRss>/2013/05/10/tokudb-and-mongodb/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
	</channel>
</rss>
