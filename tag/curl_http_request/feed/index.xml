<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>curl_http_request &#8211; Joseph Scott</title>
	<atom:link href="/tag/curl_http_request/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description></description>
	<lastBuildDate>Wed, 17 Mar 2010 22:07:18 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.7.2</generator>
	<atom:link rel='hub' href='/?pushpress=hub'/>
	<item>
		<title>PHP Helpers: curl_http_request</title>
		<link>/2010/03/17/php-helpers-curl_http_request/</link>
					<comments>/2010/03/17/php-helpers-curl_http_request/#comments</comments>
		
		<dc:creator><![CDATA[josephscott]]></dc:creator>
		<pubDate>Wed, 17 Mar 2010 22:07:18 +0000</pubDate>
				<category><![CDATA[Posts]]></category>
		<category><![CDATA[curl]]></category>
		<category><![CDATA[curl_http_request]]></category>
		<category><![CDATA[PHP]]></category>
		<category><![CDATA[php-helpers]]></category>
		<guid isPermaLink="false">http://josephscott.org/?p=2029</guid>

					<description><![CDATA[cURL is one very handy program and library, I love having access to in PHP. It has a ton of options though, and I can never seem to remember to flip the right knobs without reviewing the options list. 99% of the time I just want a simple function that does the right thing when [&#8230;]]]></description>
										<content:encoded><![CDATA[<p><a href="http://curl.haxx.se/">cURL</a> is one very handy program and library, I love having access to in PHP.  It has a ton of options though, and I can never seem to remember to flip the right knobs without reviewing the options list.  99% of the time I just want a simple function that does the right thing when making an HTTP request.  So here&#8217;s the new PHP Helpers function that sets up reasonable defaults for making HTTP requests using cURL:</p>
<p>[sourcecode lang=&#8221;php&#8221;]<br />
if ( !function_exists( &#8216;curl_http_request&#8217; ) ) {<br />
    function curl_http_request( $url, $req = &#8216;GET&#8217;, $arg = array( ) ) {<br />
        $body       = &#8221;;<br />
        $cookies    = array( );<br />
        $err_no     = 0;<br />
        $err_msg    = &#8221;;<br />
        $headers    = array( );<br />
        $info       = array( );</p>
<p>        $opt = array(<br />
            &#8216;connect_timeout&#8217;   =&gt; 5,<br />
            &#8216;cookies&#8217;           =&gt; array( ),<br />
            &#8216;follow_location&#8217;   =&gt; TRUE,<br />
            &#8216;http_headers&#8217;      =&gt; array( ),<br />
            &#8216;max_redirects&#8217;     =&gt; 5,<br />
            &#8216;timeout&#8217;           =&gt; 15,<br />
            &#8216;password&#8217;          =&gt; &#8221;,<br />
            &#8216;post_fields&#8217;       =&gt; array( ),<br />
            &#8216;user_agent&#8217;        =&gt; &#8216;PHP curl_http_get&#8217;,<br />
            &#8216;username&#8217;          =&gt; &#8221;,<br />
            &#8216;verify_ssl&#8217;        =&gt; TRUE<br />
        );<br />
        foreach ( $opt as $k =&gt; $v ) {<br />
            if ( isset( $arg[$k] ) ) {<br />
                $opt[$k] = $arg[$k];<br />
            }<br />
        }</p>
<p>        $curl_opt = array(<br />
            CURLOPT_AUTOREFERER     =&gt; TRUE,<br />
            CURLOPT_CONNECTTIMEOUT  =&gt; $opt[&#8216;connect_timeout&#8217;],<br />
            CURLOPT_CUSTOMREQUEST   =&gt; $req,<br />
            CURLOPT_ENCODING        =&gt; &#8221;,<br />
            CURLOPT_FOLLOWLOCATION  =&gt; $opt[&#8216;follow_location&#8217;],<br />
            CURLOPT_HEADER          =&gt; TRUE,<br />
            CURLOPT_MAXREDIRS       =&gt; $opt[&#8216;max_redirects&#8217;],<br />
            CURLOPT_RETURNTRANSFER  =&gt; TRUE,<br />
            CURLOPT_TIMEOUT         =&gt; $opt[&#8216;timeout&#8217;],<br />
            CURLOPT_USERAGENT       =&gt; $opt[&#8216;user_agent&#8217;],<br />
        );</p>
<p>        if (<br />
            is_array( $opt[&#8216;cookies&#8217;] )<br />
            &amp;&amp; count( $opt[&#8216;cookies&#8217;] ) &gt; 0<br />
        ) {<br />
            $curl_opt[CURLOPT_COOKIE] = implode( &#8216;;&#8217;, $opt[&#8216;cookies&#8217;] );<br />
        }</p>
<p>        if ( !empty( $opt[&#8216;username&#8217;] ) ) {<br />
            $curl_opt[CURLOPT_USERPWD] = $opt[&#8216;username&#8217;] . &#8216;:&#8217; . $opt[&#8216;password&#8217;];<br />
        }</p>
<p>        if (<br />
            is_array( $opt[&#8216;post_fields&#8217;] )<br />
            &amp;&amp; count( $opt[&#8216;post_fields&#8217;] ) &gt; 0<br />
        ) {<br />
            $curl_opt[CURLOPT_POST] = TRUE;<br />
            $curl_opt[CURLOPT_POSTFIELDS] = $opt[&#8216;post_fields&#8217;];<br />
        }</p>
<p>        if ( $req == &#8216;HEAD&#8217; ) {<br />
            $curl_opt[CURLOPT_NOBODY] = TRUE;<br />
        }</p>
<p>        if (<br />
            is_array( $opt[&#8216;http_headers&#8217;] )<br />
            &amp;&amp; count( $opt[&#8216;http_headers&#8217;] ) &gt; 0<br />
        ) {<br />
            $curl_opt[CURLOPT_HTTPHEADER] = $opt[&#8216;http_headers&#8217;];<br />
        }</p>
<p>        if ( $opt[&#8216;verify_ssl&#8217;] === FALSE ) {<br />
            $curl_opt[CURLOPT_SSL_VERIFYPEER] = FALSE;<br />
            $curl_opt[CURLOPT_SSL_VERIFYHOST] = 0;<br />
        }</p>
<p>        $curl = curl_init( $url );<br />
        curl_setopt_array( $curl, $curl_opt );</p>
<p>        $body       = curl_exec( $curl );<br />
        $err_no     = curl_errno( $curl );<br />
        $err_msg    = curl_error( $curl );<br />
        $info       = curl_getinfo( $curl );<br />
        curl_close( $curl );</p>
<p>        $header_string = trim( substr( $body, 0, $info[&#8216;header_size&#8217;] ) );<br />
        $body = substr( $body, $info[&#8216;header_size&#8217;] );</p>
<p>        if ( strpos( $header_string, &quot;rnrn&quot; ) !== FALSE ) {<br />
            $header_string = end( explode( &quot;rnrn&quot;, $header_string ) );<br />
            $header_string = str_replace( &quot;rn&quot;, &quot;n&quot;, $header_string );<br />
        }</p>
<p>        foreach ( explode( &quot;n&quot;, $header_string ) as $line ) {<br />
            list( $k, $v ) = explode( &#8216;:&#8217;, $line, 2 );<br />
            if ( empty( $v ) ) {<br />
                continue;<br />
            }</p>
<p>            if ( strtolower( $k ) == &#8216;set-cookie&#8217; ) {<br />
                $cookies[] = trim( $v );<br />
            } else {<br />
                $headers[$k] = trim( $v );<br />
            }<br />
        }</p>
<p>        return array(<br />
            &#8216;body&#8217;      =&gt; $body,<br />
            &#8216;err_no&#8217;    =&gt; $err_no,<br />
            &#8216;err_msg&#8217;   =&gt; $err_msg,<br />
            &#8216;headers&#8217;   =&gt; $headers,<br />
            &#8216;cookies&#8217;   =&gt; $cookies,<br />
            &#8216;info&#8217;      =&gt; $info<br />
        );<br />
    } // function curl_http_request<br />
}<br />
[/sourcecode]</p>
<p>It&#8217;s a bit longer that then other PHP Helper functions <img src="https://s.w.org/images/core/emoji/13.0.1/72x72/1f642.png" alt="ðŸ™‚" class="wp-smiley" style="height: 1em; max-height: 1em;" /> .</p>
]]></content:encoded>
					
					<wfw:commentRss>/2010/03/17/php-helpers-curl_http_request/feed/</wfw:commentRss>
			<slash:comments>4</slash:comments>
		
		
			</item>
	</channel>
</rss>
